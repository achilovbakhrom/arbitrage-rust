<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="4407"><g><title>0x100ffee6c (1 samples, 0.02%)</title><rect x="0.0000%" y="709" width="0.0227%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>0x1011d1e34 (1 samples, 0.02%)</title><rect x="0.0000%" y="693" width="0.0227%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>0x101253248 (1 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0227%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>0x101253338 (1 samples, 0.02%)</title><rect x="0.0000%" y="661" width="0.0227%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>_realloc (1 samples, 0.02%)</title><rect x="0.0000%" y="645" width="0.0227%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.02%)</title><rect x="0.0000%" y="629" width="0.0227%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>szone_realloc (1 samples, 0.02%)</title><rect x="0.0000%" y="613" width="0.0227%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>0x100ffa084 (1 samples, 0.02%)</title><rect x="0.0227%" y="693" width="0.0227%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.2727%" y="703.50"></text></g><g><title>0x10100d6bc (1 samples, 0.02%)</title><rect x="0.0227%" y="677" width="0.0227%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.2727%" y="687.50"></text></g><g><title>0x101230d58 (1 samples, 0.02%)</title><rect x="0.0227%" y="661" width="0.0227%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.2727%" y="671.50"></text></g><g><title>0x1010856f0 (1 samples, 0.02%)</title><rect x="0.0227%" y="645" width="0.0227%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.2727%" y="655.50"></text></g><g><title>0x1010856f0 (1 samples, 0.02%)</title><rect x="0.0227%" y="629" width="0.0227%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.2727%" y="639.50"></text></g><g><title>0x1010a1c8c (1 samples, 0.02%)</title><rect x="0.0227%" y="613" width="0.0227%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.2727%" y="623.50"></text></g><g><title>0x1010eeaa8 (1 samples, 0.02%)</title><rect x="0.0227%" y="597" width="0.0227%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.2727%" y="607.50"></text></g><g><title>Security::MDSClient::Directory::cdsa() const (1 samples, 0.02%)</title><rect x="0.0454%" y="293" width="0.0227%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.2954%" y="303.50"></text></g><g><title>mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (1 samples, 0.02%)</title><rect x="0.0454%" y="277" width="0.0227%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.2954%" y="287.50"></text></g><g><title>Security::MDSSession::DbOpen(char const*, cssm_net_address const*, unsigned int, Security::AccessCredentials const*, void const*, long&amp;) (1 samples, 0.02%)</title><rect x="0.0454%" y="261" width="0.0227%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.2954%" y="271.50"></text></g><g><title>Security::MDSSession::updateDataBases() (1 samples, 0.02%)</title><rect x="0.0454%" y="245" width="0.0227%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.2954%" y="255.50"></text></g><g><title>Security::safeCopyFile(char const*, unsigned int, char const*, unsigned short) (1 samples, 0.02%)</title><rect x="0.0454%" y="229" width="0.0227%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.2954%" y="239.50"></text></g><g><title>__open (1 samples, 0.02%)</title><rect x="0.0454%" y="213" width="0.0227%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="1"/><text x="0.2954%" y="223.50"></text></g><g><title>Security::KeychainCore::Certificate::publicKey() (2 samples, 0.05%)</title><rect x="0.0454%" y="421" width="0.0454%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="2"/><text x="0.2954%" y="431.50"></text></g><g><title>Security::KeychainCore::Certificate::copyFirstFieldValue(cssm_data const&amp;) (2 samples, 0.05%)</title><rect x="0.0454%" y="405" width="0.0454%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="2"/><text x="0.2954%" y="415.50"></text></g><g><title>Security::KeychainCore::Certificate::clHandle() (2 samples, 0.05%)</title><rect x="0.0454%" y="389" width="0.0454%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="2"/><text x="0.2954%" y="399.50"></text></g><g><title>Security::CssmClient::AttachmentImpl::activate() (2 samples, 0.05%)</title><rect x="0.0454%" y="373" width="0.0454%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="2"/><text x="0.2954%" y="383.50"></text></g><g><title>Security::CssmClient::ModuleImpl::activate() (2 samples, 0.05%)</title><rect x="0.0454%" y="357" width="0.0454%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="2"/><text x="0.2954%" y="367.50"></text></g><g><title>CSSM_ModuleLoad (2 samples, 0.05%)</title><rect x="0.0454%" y="341" width="0.0454%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="2"/><text x="0.2954%" y="351.50"></text></g><g><title>Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery(Security::CssmQuery const&amp;, bool) (2 samples, 0.05%)</title><rect x="0.0454%" y="325" width="0.0454%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="2"/><text x="0.2954%" y="335.50"></text></g><g><title>Security::MDSClient::Directory::dlGetFirst(cssm_query const&amp;, cssm_db_record_attribute_data&amp;, cssm_data*, cssm_db_unique_record*&amp;) (2 samples, 0.05%)</title><rect x="0.0454%" y="309" width="0.0454%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="2"/><text x="0.2954%" y="319.50"></text></g><g><title>mds_DataGetFirst(cssm_dl_db_handle, cssm_query const*, long*, cssm_db_record_attribute_data*, cssm_data*, cssm_db_unique_record**) (1 samples, 0.02%)</title><rect x="0.0681%" y="293" width="0.0227%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="1"/><text x="0.3181%" y="303.50"></text></g><g><title>Security::MDSSession::DataGetFirst(long, Security::CssmQuery const*, cssm_db_record_attribute_data*, Security::CssmData*, cssm_db_unique_record*&amp;) (1 samples, 0.02%)</title><rect x="0.0681%" y="277" width="0.0227%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="1"/><text x="0.3181%" y="287.50"></text></g><g><title>Security::MDSSession::updateDataBases() (1 samples, 0.02%)</title><rect x="0.0681%" y="261" width="0.0227%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="1"/><text x="0.3181%" y="271.50"></text></g><g><title>Security::safeCopyFile(char const*, unsigned int, char const*, unsigned short) (1 samples, 0.02%)</title><rect x="0.0681%" y="245" width="0.0227%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="1"/><text x="0.3181%" y="255.50"></text></g><g><title>__rename (1 samples, 0.02%)</title><rect x="0.0681%" y="229" width="0.0227%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="1"/><text x="0.3181%" y="239.50"></text></g><g><title>SSLHandshake (3 samples, 0.07%)</title><rect x="0.0454%" y="549" width="0.0681%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="3"/><text x="0.2954%" y="559.50"></text></g><g><title>SSLHandshakeProceed (3 samples, 0.07%)</title><rect x="0.0454%" y="533" width="0.0681%" height="15" fill="rgb(241,83,37)" fg:x="2" fg:w="3"/><text x="0.2954%" y="543.50"></text></g><g><title>tls_handshake_process (3 samples, 0.07%)</title><rect x="0.0454%" y="517" width="0.0681%" height="15" fill="rgb(233,36,39)" fg:x="2" fg:w="3"/><text x="0.2954%" y="527.50"></text></g><g><title>SSLProcessHandshakeRecordInner (3 samples, 0.07%)</title><rect x="0.0454%" y="501" width="0.0681%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="3"/><text x="0.2954%" y="511.50"></text></g><g><title>tls_handshake_message_callback (3 samples, 0.07%)</title><rect x="0.0454%" y="485" width="0.0681%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="3"/><text x="0.2954%" y="495.50"></text></g><g><title>tls_helper_set_peer_pubkey (3 samples, 0.07%)</title><rect x="0.0454%" y="469" width="0.0681%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="3"/><text x="0.2954%" y="479.50"></text></g><g><title>SecTrustCopyPublicKey (3 samples, 0.07%)</title><rect x="0.0454%" y="453" width="0.0681%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="3"/><text x="0.2954%" y="463.50"></text></g><g><title>SecCertificateCopyPublicKey$LEGACYMAC (3 samples, 0.07%)</title><rect x="0.0454%" y="437" width="0.0681%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="3"/><text x="0.2954%" y="447.50"></text></g><g><title>countLegacyAPI (1 samples, 0.02%)</title><rect x="0.0908%" y="421" width="0.0227%" height="15" fill="rgb(208,69,12)" fg:x="4" fg:w="1"/><text x="0.3408%" y="431.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.02%)</title><rect x="0.0908%" y="405" width="0.0227%" height="15" fill="rgb(235,93,37)" fg:x="4" fg:w="1"/><text x="0.3408%" y="415.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.02%)</title><rect x="0.0908%" y="389" width="0.0227%" height="15" fill="rgb(213,116,39)" fg:x="4" fg:w="1"/><text x="0.3408%" y="399.50"></text></g><g><title>__countLegacyAPI_block_invoke (1 samples, 0.02%)</title><rect x="0.0908%" y="373" width="0.0227%" height="15" fill="rgb(222,207,29)" fg:x="4" fg:w="1"/><text x="0.3408%" y="383.50"></text></g><g><title>+[SecCoreAnalytics sendEventLazy:builder:] (1 samples, 0.02%)</title><rect x="0.0908%" y="357" width="0.0227%" height="15" fill="rgb(206,96,30)" fg:x="4" fg:w="1"/><text x="0.3408%" y="367.50"></text></g><g><title>AnalyticsSendEventInternal(NSString const*, NSDictionary&lt;NSString*, NSObject*&gt;* () block_pointer, XPCMessagePriority, EventPayloadFormat, NSDictionary&lt;NSString*, NSObject*&gt;*) (1 samples, 0.02%)</title><rect x="0.0908%" y="341" width="0.0227%" height="15" fill="rgb(218,138,4)" fg:x="4" fg:w="1"/><text x="0.3408%" y="351.50"></text></g><g><title>CASPIEnter() (1 samples, 0.02%)</title><rect x="0.0908%" y="325" width="0.0227%" height="15" fill="rgb(250,191,14)" fg:x="4" fg:w="1"/><text x="0.3408%" y="335.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.02%)</title><rect x="0.0908%" y="309" width="0.0227%" height="15" fill="rgb(239,60,40)" fg:x="4" fg:w="1"/><text x="0.3408%" y="319.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.02%)</title><rect x="0.0908%" y="293" width="0.0227%" height="15" fill="rgb(206,27,48)" fg:x="4" fg:w="1"/><text x="0.3408%" y="303.50"></text></g><g><title>invocation function for block in CASPIEnter() (1 samples, 0.02%)</title><rect x="0.0908%" y="277" width="0.0227%" height="15" fill="rgb(225,35,8)" fg:x="4" fg:w="1"/><text x="0.3408%" y="287.50"></text></g><g><title>sSetupFrameworkLogDomains() (1 samples, 0.02%)</title><rect x="0.0908%" y="261" width="0.0227%" height="15" fill="rgb(250,213,24)" fg:x="4" fg:w="1"/><text x="0.3408%" y="271.50"></text></g><g><title>os_log_create (1 samples, 0.02%)</title><rect x="0.0908%" y="245" width="0.0227%" height="15" fill="rgb(247,123,22)" fg:x="4" fg:w="1"/><text x="0.3408%" y="255.50"></text></g><g><title>_os_log_preferences_refresh (1 samples, 0.02%)</title><rect x="0.0908%" y="229" width="0.0227%" height="15" fill="rgb(231,138,38)" fg:x="4" fg:w="1"/><text x="0.3408%" y="239.50"></text></g><g><title>_os_log_stream_filter_refresh (1 samples, 0.02%)</title><rect x="0.0908%" y="213" width="0.0227%" height="15" fill="rgb(231,145,46)" fg:x="4" fg:w="1"/><text x="0.3408%" y="223.50"></text></g><g><title>_os_log_matches_filter (1 samples, 0.02%)</title><rect x="0.0908%" y="197" width="0.0227%" height="15" fill="rgb(251,118,11)" fg:x="4" fg:w="1"/><text x="0.3408%" y="207.50"></text></g><g><title>xpc_array_apply (1 samples, 0.02%)</title><rect x="0.0908%" y="181" width="0.0227%" height="15" fill="rgb(217,147,25)" fg:x="4" fg:w="1"/><text x="0.3408%" y="191.50"></text></g><g><title>___os_log_matches_logical_expression_filter_block_invoke (1 samples, 0.02%)</title><rect x="0.0908%" y="165" width="0.0227%" height="15" fill="rgb(247,81,37)" fg:x="4" fg:w="1"/><text x="0.3408%" y="175.50"></text></g><g><title>_os_log_matches_filter (1 samples, 0.02%)</title><rect x="0.0908%" y="149" width="0.0227%" height="15" fill="rgb(209,12,38)" fg:x="4" fg:w="1"/><text x="0.3408%" y="159.50"></text></g><g><title>xpc_array_apply (1 samples, 0.02%)</title><rect x="0.0908%" y="133" width="0.0227%" height="15" fill="rgb(227,1,9)" fg:x="4" fg:w="1"/><text x="0.3408%" y="143.50"></text></g><g><title>___os_log_matches_logical_expression_filter_block_invoke (1 samples, 0.02%)</title><rect x="0.0908%" y="117" width="0.0227%" height="15" fill="rgb(248,47,43)" fg:x="4" fg:w="1"/><text x="0.3408%" y="127.50"></text></g><g><title>_os_log_matches_filter (1 samples, 0.02%)</title><rect x="0.0908%" y="101" width="0.0227%" height="15" fill="rgb(221,10,30)" fg:x="4" fg:w="1"/><text x="0.3408%" y="111.50"></text></g><g><title>_os_log_simple_filter_subtype_matches_string (1 samples, 0.02%)</title><rect x="0.0908%" y="85" width="0.0227%" height="15" fill="rgb(210,229,1)" fg:x="4" fg:w="1"/><text x="0.3408%" y="95.50"></text></g><g><title>xpc_dictionary_get_dictionary (1 samples, 0.02%)</title><rect x="0.0908%" y="69" width="0.0227%" height="15" fill="rgb(222,148,37)" fg:x="4" fg:w="1"/><text x="0.3408%" y="79.50"></text></g><g><title>_xpc_dictionary_look_up (1 samples, 0.02%)</title><rect x="0.0908%" y="53" width="0.0227%" height="15" fill="rgb(234,67,33)" fg:x="4" fg:w="1"/><text x="0.3408%" y="63.50"></text></g><g><title>_xpc_dictionary_look_up_table (1 samples, 0.02%)</title><rect x="0.0908%" y="37" width="0.0227%" height="15" fill="rgb(247,98,35)" fg:x="4" fg:w="1"/><text x="0.3408%" y="47.50"></text></g><g><title>__handle_trust_evaluate_xpc_block_invoke_2 (1 samples, 0.02%)</title><rect x="0.1135%" y="389" width="0.0227%" height="15" fill="rgb(247,138,52)" fg:x="5" fg:w="1"/><text x="0.3635%" y="399.50"></text></g><g><title>SecXPCDictionaryCopyChainOptional (1 samples, 0.02%)</title><rect x="0.1135%" y="373" width="0.0227%" height="15" fill="rgb(213,79,30)" fg:x="5" fg:w="1"/><text x="0.3635%" y="383.50"></text></g><g><title>SecCertificateCreateWithXPCArrayAtIndex (1 samples, 0.02%)</title><rect x="0.1135%" y="357" width="0.0227%" height="15" fill="rgb(246,177,23)" fg:x="5" fg:w="1"/><text x="0.3635%" y="367.50"></text></g><g><title>SecCertificateCreateWithBytes (1 samples, 0.02%)</title><rect x="0.1135%" y="341" width="0.0227%" height="15" fill="rgb(230,62,27)" fg:x="5" fg:w="1"/><text x="0.3635%" y="351.50"></text></g><g><title>SecCertificateParse (1 samples, 0.02%)</title><rect x="0.1135%" y="325" width="0.0227%" height="15" fill="rgb(216,154,8)" fg:x="5" fg:w="1"/><text x="0.3635%" y="335.50"></text></g><g><title>DERParseSequenceContentToObject (1 samples, 0.02%)</title><rect x="0.1135%" y="309" width="0.0227%" height="15" fill="rgb(244,35,45)" fg:x="5" fg:w="1"/><text x="0.3635%" y="319.50"></text></g><g><title>0x1011b3008 (5 samples, 0.11%)</title><rect x="0.0454%" y="661" width="0.1135%" height="15" fill="rgb(251,115,12)" fg:x="2" fg:w="5"/><text x="0.2954%" y="671.50"></text></g><g><title>0x10116dbd8 (5 samples, 0.11%)</title><rect x="0.0454%" y="645" width="0.1135%" height="15" fill="rgb(240,54,50)" fg:x="2" fg:w="5"/><text x="0.2954%" y="655.50"></text></g><g><title>0x10117b6d0 (5 samples, 0.11%)</title><rect x="0.0454%" y="629" width="0.1135%" height="15" fill="rgb(233,84,52)" fg:x="2" fg:w="5"/><text x="0.2954%" y="639.50"></text></g><g><title>0x1011684d4 (5 samples, 0.11%)</title><rect x="0.0454%" y="613" width="0.1135%" height="15" fill="rgb(207,117,47)" fg:x="2" fg:w="5"/><text x="0.2954%" y="623.50"></text></g><g><title>0x10115f5a8 (5 samples, 0.11%)</title><rect x="0.0454%" y="597" width="0.1135%" height="15" fill="rgb(249,43,39)" fg:x="2" fg:w="5"/><text x="0.2954%" y="607.50"></text></g><g><title>0x101166c78 (5 samples, 0.11%)</title><rect x="0.0454%" y="581" width="0.1135%" height="15" fill="rgb(209,38,44)" fg:x="2" fg:w="5"/><text x="0.2954%" y="591.50"></text></g><g><title>0x101167b08 (5 samples, 0.11%)</title><rect x="0.0454%" y="565" width="0.1135%" height="15" fill="rgb(236,212,23)" fg:x="2" fg:w="5"/><text x="0.2954%" y="575.50"></text></g><g><title>SecTrustEvaluateInternal (2 samples, 0.05%)</title><rect x="0.1135%" y="549" width="0.0454%" height="15" fill="rgb(242,79,21)" fg:x="5" fg:w="2"/><text x="0.3635%" y="559.50"></text></g><g><title>SecTrustEvaluateIfNecessary (2 samples, 0.05%)</title><rect x="0.1135%" y="533" width="0.0454%" height="15" fill="rgb(211,96,35)" fg:x="5" fg:w="2"/><text x="0.3635%" y="543.50"></text></g><g><title>_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.05%)</title><rect x="0.1135%" y="517" width="0.0454%" height="15" fill="rgb(253,215,40)" fg:x="5" fg:w="2"/><text x="0.3635%" y="527.50"></text></g><g><title>_dispatch_client_callout (2 samples, 0.05%)</title><rect x="0.1135%" y="501" width="0.0454%" height="15" fill="rgb(211,81,21)" fg:x="5" fg:w="2"/><text x="0.3635%" y="511.50"></text></g><g><title>__SecTrustEvaluateIfNecessary_block_invoke (2 samples, 0.05%)</title><rect x="0.1135%" y="485" width="0.0454%" height="15" fill="rgb(208,190,38)" fg:x="5" fg:w="2"/><text x="0.3635%" y="495.50"></text></g><g><title>_os_activity_initiate_impl (2 samples, 0.05%)</title><rect x="0.1135%" y="469" width="0.0454%" height="15" fill="rgb(235,213,38)" fg:x="5" fg:w="2"/><text x="0.3635%" y="479.50"></text></g><g><title>__SecTrustEvaluateIfNecessary_block_invoke_2 (2 samples, 0.05%)</title><rect x="0.1135%" y="453" width="0.0454%" height="15" fill="rgb(237,122,38)" fg:x="5" fg:w="2"/><text x="0.3635%" y="463.50"></text></g><g><title>SecOSStatusWith (2 samples, 0.05%)</title><rect x="0.1135%" y="437" width="0.0454%" height="15" fill="rgb(244,218,35)" fg:x="5" fg:w="2"/><text x="0.3635%" y="447.50"></text></g><g><title>__SecTrustEvaluateIfNecessary_block_invoke_3 (2 samples, 0.05%)</title><rect x="0.1135%" y="421" width="0.0454%" height="15" fill="rgb(240,68,47)" fg:x="5" fg:w="2"/><text x="0.3635%" y="431.50"></text></g><g><title>securityd_send_sync_and_do (2 samples, 0.05%)</title><rect x="0.1135%" y="405" width="0.0454%" height="15" fill="rgb(210,16,53)" fg:x="5" fg:w="2"/><text x="0.3635%" y="415.50"></text></g><g><title>security_fw_send_message_with_reply_sync_inner (1 samples, 0.02%)</title><rect x="0.1361%" y="389" width="0.0227%" height="15" fill="rgb(235,124,12)" fg:x="6" fg:w="1"/><text x="0.3861%" y="399.50"></text></g><g><title>xpc_connection_send_message_with_reply_sync (1 samples, 0.02%)</title><rect x="0.1361%" y="373" width="0.0227%" height="15" fill="rgb(224,169,11)" fg:x="6" fg:w="1"/><text x="0.3861%" y="383.50"></text></g><g><title>dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 0.02%)</title><rect x="0.1361%" y="357" width="0.0227%" height="15" fill="rgb(250,166,2)" fg:x="6" fg:w="1"/><text x="0.3861%" y="367.50"></text></g><g><title>_dispatch_mach_send_and_wait_for_reply (1 samples, 0.02%)</title><rect x="0.1361%" y="341" width="0.0227%" height="15" fill="rgb(242,216,29)" fg:x="6" fg:w="1"/><text x="0.3861%" y="351.50"></text></g><g><title>_dispatch_mach_send_msg (1 samples, 0.02%)</title><rect x="0.1361%" y="325" width="0.0227%" height="15" fill="rgb(230,116,27)" fg:x="6" fg:w="1"/><text x="0.3861%" y="335.50"></text></g><g><title>_dispatch_mach_send_drain (1 samples, 0.02%)</title><rect x="0.1361%" y="309" width="0.0227%" height="15" fill="rgb(228,99,48)" fg:x="6" fg:w="1"/><text x="0.3861%" y="319.50"></text></g><g><title>_dispatch_mach_msg_send (1 samples, 0.02%)</title><rect x="0.1361%" y="293" width="0.0227%" height="15" fill="rgb(253,11,6)" fg:x="6" fg:w="1"/><text x="0.3861%" y="303.50"></text></g><g><title>_dispatch_mach_msg_send (1 samples, 0.02%)</title><rect x="0.1361%" y="277" width="0.0227%" height="15" fill="rgb(247,143,39)" fg:x="6" fg:w="1"/><text x="0.3861%" y="287.50"></text></g><g><title>mach_msg2_trap (1 samples, 0.02%)</title><rect x="0.1361%" y="261" width="0.0227%" height="15" fill="rgb(236,97,10)" fg:x="6" fg:w="1"/><text x="0.3861%" y="271.50"></text></g><g><title>0x10103a140 (6 samples, 0.14%)</title><rect x="0.0454%" y="693" width="0.1361%" height="15" fill="rgb(233,208,19)" fg:x="2" fg:w="6"/><text x="0.2954%" y="703.50"></text></g><g><title>0x1010742ac (6 samples, 0.14%)</title><rect x="0.0454%" y="677" width="0.1361%" height="15" fill="rgb(216,164,2)" fg:x="2" fg:w="6"/><text x="0.2954%" y="687.50"></text></g><g><title>0x101253ad8 (1 samples, 0.02%)</title><rect x="0.1588%" y="661" width="0.0227%" height="15" fill="rgb(220,129,5)" fg:x="7" fg:w="1"/><text x="0.4088%" y="671.50"></text></g><g><title>0x10100d560 (1 samples, 0.02%)</title><rect x="0.1588%" y="645" width="0.0227%" height="15" fill="rgb(242,17,10)" fg:x="7" fg:w="1"/><text x="0.4088%" y="655.50"></text></g><g><title>0x101155238 (1 samples, 0.02%)</title><rect x="0.1588%" y="629" width="0.0227%" height="15" fill="rgb(242,107,0)" fg:x="7" fg:w="1"/><text x="0.4088%" y="639.50"></text></g><g><title>SCDynamicStoreCreateWithOptions (1 samples, 0.02%)</title><rect x="0.1588%" y="613" width="0.0227%" height="15" fill="rgb(251,28,31)" fg:x="7" fg:w="1"/><text x="0.4088%" y="623.50"></text></g><g><title>__SCDynamicStoreAddSession (1 samples, 0.02%)</title><rect x="0.1588%" y="597" width="0.0227%" height="15" fill="rgb(233,223,10)" fg:x="7" fg:w="1"/><text x="0.4088%" y="607.50"></text></g><g><title>_SCSerializeString (1 samples, 0.02%)</title><rect x="0.1588%" y="581" width="0.0227%" height="15" fill="rgb(215,21,27)" fg:x="7" fg:w="1"/><text x="0.4088%" y="591.50"></text></g><g><title>__CFDataInit (1 samples, 0.02%)</title><rect x="0.1588%" y="565" width="0.0227%" height="15" fill="rgb(232,23,21)" fg:x="7" fg:w="1"/><text x="0.4088%" y="575.50"></text></g><g><title>_CFRuntimeCreateInstance (1 samples, 0.02%)</title><rect x="0.1588%" y="549" width="0.0227%" height="15" fill="rgb(244,5,23)" fg:x="7" fg:w="1"/><text x="0.4088%" y="559.50"></text></g><g><title>object_setClass (1 samples, 0.02%)</title><rect x="0.1588%" y="533" width="0.0227%" height="15" fill="rgb(226,81,46)" fg:x="7" fg:w="1"/><text x="0.4088%" y="543.50"></text></g><g><title>lookUpImpOrForward (1 samples, 0.02%)</title><rect x="0.1588%" y="517" width="0.0227%" height="15" fill="rgb(247,70,30)" fg:x="7" fg:w="1"/><text x="0.4088%" y="527.50"></text></g><g><title>initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin&lt;objc_lock_base_t&gt;&gt;&amp;, bool) (1 samples, 0.02%)</title><rect x="0.1588%" y="501" width="0.0227%" height="15" fill="rgb(212,68,19)" fg:x="7" fg:w="1"/><text x="0.4088%" y="511.50"></text></g><g><title>initializeNonMetaClass (1 samples, 0.02%)</title><rect x="0.1588%" y="485" width="0.0227%" height="15" fill="rgb(240,187,13)" fg:x="7" fg:w="1"/><text x="0.4088%" y="495.50"></text></g><g><title>initializeNonMetaClass (1 samples, 0.02%)</title><rect x="0.1588%" y="469" width="0.0227%" height="15" fill="rgb(223,113,26)" fg:x="7" fg:w="1"/><text x="0.4088%" y="479.50"></text></g><g><title>initializeNonMetaClass (1 samples, 0.02%)</title><rect x="0.1588%" y="453" width="0.0227%" height="15" fill="rgb(206,192,2)" fg:x="7" fg:w="1"/><text x="0.4088%" y="463.50"></text></g><g><title>lockAndFinishInitializing(objc_class*, objc_class*) (1 samples, 0.02%)</title><rect x="0.1588%" y="437" width="0.0227%" height="15" fill="rgb(241,108,4)" fg:x="7" fg:w="1"/><text x="0.4088%" y="447.50"></text></g><g><title>_finishInitializing(objc_class*, objc_class*) (1 samples, 0.02%)</title><rect x="0.1588%" y="421" width="0.0227%" height="15" fill="rgb(247,173,49)" fg:x="7" fg:w="1"/><text x="0.4088%" y="431.50"></text></g><g><title>objc::Scanner::scanAddedClassImpl(objc_class*, objc::Scanner::metaclass_t) (1 samples, 0.02%)</title><rect x="0.1588%" y="405" width="0.0227%" height="15" fill="rgb(224,114,35)" fg:x="7" fg:w="1"/><text x="0.4088%" y="415.50"></text></g><g><title>unsigned int objc::Scanner::scanMethodLists&lt;list_array_tt&lt;method_t, method_list_t, method_list_t_authed_ptr&gt;::ListIterator&gt;(list_array_tt&lt;method_t, method_list_t, method_list_t_authed_ptr&gt;::ListIterator, list_array_tt&lt;method_t, method_list_t, method_list_t_authed_ptr&gt;::ListIterator) (1 samples, 0.02%)</title><rect x="0.1588%" y="389" width="0.0227%" height="15" fill="rgb(245,159,27)" fg:x="7" fg:w="1"/><text x="0.4088%" y="399.50"></text></g><g><title>0x10101ada8 (1 samples, 0.02%)</title><rect x="0.2042%" y="645" width="0.0227%" height="15" fill="rgb(245,172,44)" fg:x="9" fg:w="1"/><text x="0.4542%" y="655.50"></text></g><g><title>free_tiny (1 samples, 0.02%)</title><rect x="0.2042%" y="629" width="0.0227%" height="15" fill="rgb(236,23,11)" fg:x="9" fg:w="1"/><text x="0.4542%" y="639.50"></text></g><g><title>0x1011b665c (4 samples, 0.09%)</title><rect x="0.2496%" y="629" width="0.0908%" height="15" fill="rgb(205,117,38)" fg:x="11" fg:w="4"/><text x="0.4996%" y="639.50"></text></g><g><title>0x1011b6920 (4 samples, 0.09%)</title><rect x="0.2496%" y="613" width="0.0908%" height="15" fill="rgb(237,72,25)" fg:x="11" fg:w="4"/><text x="0.4996%" y="623.50"></text></g><g><title>0x1010d29a4 (4 samples, 0.09%)</title><rect x="0.2496%" y="597" width="0.0908%" height="15" fill="rgb(244,70,9)" fg:x="11" fg:w="4"/><text x="0.4996%" y="607.50"></text></g><g><title>0x101206880 (4 samples, 0.09%)</title><rect x="0.2496%" y="581" width="0.0908%" height="15" fill="rgb(217,125,39)" fg:x="11" fg:w="4"/><text x="0.4996%" y="591.50"></text></g><g><title>0x101213ae0 (4 samples, 0.09%)</title><rect x="0.2496%" y="565" width="0.0908%" height="15" fill="rgb(235,36,10)" fg:x="11" fg:w="4"/><text x="0.4996%" y="575.50"></text></g><g><title>0x10124d0d4 (3 samples, 0.07%)</title><rect x="0.2723%" y="549" width="0.0681%" height="15" fill="rgb(251,123,47)" fg:x="12" fg:w="3"/><text x="0.5223%" y="559.50"></text></g><g><title>__psynch_cvsignal (3 samples, 0.07%)</title><rect x="0.2723%" y="533" width="0.0681%" height="15" fill="rgb(221,13,13)" fg:x="12" fg:w="3"/><text x="0.5223%" y="543.50"></text></g><g><title>0x101034158 (6 samples, 0.14%)</title><rect x="0.2269%" y="645" width="0.1361%" height="15" fill="rgb(238,131,9)" fg:x="10" fg:w="6"/><text x="0.4769%" y="655.50"></text></g><g><title>free_tiny (1 samples, 0.02%)</title><rect x="0.3404%" y="629" width="0.0227%" height="15" fill="rgb(211,50,8)" fg:x="15" fg:w="1"/><text x="0.5904%" y="639.50"></text></g><g><title>0x101022714 (12 samples, 0.27%)</title><rect x="0.3631%" y="629" width="0.2723%" height="15" fill="rgb(245,182,24)" fg:x="16" fg:w="12"/><text x="0.6131%" y="639.50"></text></g><g><title>0x1011c6ef0 (8 samples, 0.18%)</title><rect x="0.4538%" y="613" width="0.1815%" height="15" fill="rgb(242,14,37)" fg:x="20" fg:w="8"/><text x="0.7038%" y="623.50"></text></g><g><title>0x101021f38 (1 samples, 0.02%)</title><rect x="0.6580%" y="597" width="0.0227%" height="15" fill="rgb(246,228,12)" fg:x="29" fg:w="1"/><text x="0.9080%" y="607.50"></text></g><g><title>0x101250a60 (1 samples, 0.02%)</title><rect x="0.6580%" y="581" width="0.0227%" height="15" fill="rgb(213,55,15)" fg:x="29" fg:w="1"/><text x="0.9080%" y="591.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.6580%" y="565" width="0.0227%" height="15" fill="rgb(209,9,3)" fg:x="29" fg:w="1"/><text x="0.9080%" y="575.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="0.6580%" y="549" width="0.0227%" height="15" fill="rgb(230,59,30)" fg:x="29" fg:w="1"/><text x="0.9080%" y="559.50"></text></g><g><title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="0.6580%" y="533" width="0.0227%" height="15" fill="rgb(209,121,21)" fg:x="29" fg:w="1"/><text x="0.9080%" y="543.50"></text></g><g><title>0x101022638 (1 samples, 0.02%)</title><rect x="0.6807%" y="597" width="0.0227%" height="15" fill="rgb(220,109,13)" fg:x="30" fg:w="1"/><text x="0.9307%" y="607.50"></text></g><g><title>0x10103df04 (1 samples, 0.02%)</title><rect x="0.7034%" y="597" width="0.0227%" height="15" fill="rgb(232,18,1)" fg:x="31" fg:w="1"/><text x="0.9534%" y="607.50"></text></g><g><title>0x101035c34 (8 samples, 0.18%)</title><rect x="0.6354%" y="629" width="0.1815%" height="15" fill="rgb(215,41,42)" fg:x="28" fg:w="8"/><text x="0.8854%" y="639.50"></text></g><g><title>0x10106ef54 (8 samples, 0.18%)</title><rect x="0.6354%" y="613" width="0.1815%" height="15" fill="rgb(224,123,36)" fg:x="28" fg:w="8"/><text x="0.8854%" y="623.50"></text></g><g><title>0x1011c68c4 (4 samples, 0.09%)</title><rect x="0.7261%" y="597" width="0.0908%" height="15" fill="rgb(240,125,3)" fg:x="32" fg:w="4"/><text x="0.9761%" y="607.50"></text></g><g><title>0x101088518 (2 samples, 0.05%)</title><rect x="0.7715%" y="581" width="0.0454%" height="15" fill="rgb(205,98,50)" fg:x="34" fg:w="2"/><text x="1.0215%" y="591.50"></text></g><g><title>0x1010366c8 (21 samples, 0.48%)</title><rect x="0.3631%" y="645" width="0.4765%" height="15" fill="rgb(205,185,37)" fg:x="16" fg:w="21"/><text x="0.6131%" y="655.50"></text></g><g><title>0x101036530 (1 samples, 0.02%)</title><rect x="0.8169%" y="629" width="0.0227%" height="15" fill="rgb(238,207,15)" fg:x="36" fg:w="1"/><text x="1.0669%" y="639.50"></text></g><g><title>0x1011c68c4 (1 samples, 0.02%)</title><rect x="0.8169%" y="613" width="0.0227%" height="15" fill="rgb(213,199,42)" fg:x="36" fg:w="1"/><text x="1.0669%" y="623.50"></text></g><g><title>0x101088518 (1 samples, 0.02%)</title><rect x="0.8169%" y="597" width="0.0227%" height="15" fill="rgb(235,201,11)" fg:x="36" fg:w="1"/><text x="1.0669%" y="607.50"></text></g><g><title>_platform_memmove (6 samples, 0.14%)</title><rect x="0.8396%" y="645" width="0.1361%" height="15" fill="rgb(207,46,11)" fg:x="37" fg:w="6"/><text x="1.0896%" y="655.50"></text></g><g><title>0x10103a30c (36 samples, 0.82%)</title><rect x="0.1815%" y="693" width="0.8169%" height="15" fill="rgb(241,35,35)" fg:x="8" fg:w="36"/><text x="0.4315%" y="703.50"></text></g><g><title>0x101073550 (36 samples, 0.82%)</title><rect x="0.1815%" y="677" width="0.8169%" height="15" fill="rgb(243,32,47)" fg:x="8" fg:w="36"/><text x="0.4315%" y="687.50"></text></g><g><title>0x1010715cc (35 samples, 0.79%)</title><rect x="0.2042%" y="661" width="0.7942%" height="15" fill="rgb(247,202,23)" fg:x="9" fg:w="35"/><text x="0.4542%" y="671.50"></text></g><g><title>free_tiny (1 samples, 0.02%)</title><rect x="0.9757%" y="645" width="0.0227%" height="15" fill="rgb(219,102,11)" fg:x="43" fg:w="1"/><text x="1.2257%" y="655.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="0.9757%" y="629" width="0.0227%" height="15" fill="rgb(243,110,44)" fg:x="43" fg:w="1"/><text x="1.2257%" y="639.50"></text></g><g><title>tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="0.9757%" y="613" width="0.0227%" height="15" fill="rgb(222,74,54)" fg:x="43" fg:w="1"/><text x="1.2257%" y="623.50"></text></g><g><title>0x101039500 (1 samples, 0.02%)</title><rect x="1.0211%" y="677" width="0.0227%" height="15" fill="rgb(216,99,12)" fg:x="45" fg:w="1"/><text x="1.2711%" y="687.50"></text></g><g><title>0x10104509c (3 samples, 0.07%)</title><rect x="0.9984%" y="693" width="0.0681%" height="15" fill="rgb(226,22,26)" fg:x="44" fg:w="3"/><text x="1.2484%" y="703.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.0438%" y="677" width="0.0227%" height="15" fill="rgb(217,163,10)" fg:x="46" fg:w="1"/><text x="1.2938%" y="687.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.0438%" y="661" width="0.0227%" height="15" fill="rgb(213,25,53)" fg:x="46" fg:w="1"/><text x="1.2938%" y="671.50"></text></g><g><title>0x1010661c8 (47 samples, 1.07%)</title><rect x="0.0227%" y="709" width="1.0665%" height="15" fill="rgb(252,105,26)" fg:x="1" fg:w="47"/><text x="0.2727%" y="719.50"></text></g><g><title>0x1010a04f8 (1 samples, 0.02%)</title><rect x="1.0665%" y="693" width="0.0227%" height="15" fill="rgb(220,39,43)" fg:x="47" fg:w="1"/><text x="1.3165%" y="703.50"></text></g><g><title>0x10109f3ac (1 samples, 0.02%)</title><rect x="1.0665%" y="677" width="0.0227%" height="15" fill="rgb(229,68,48)" fg:x="47" fg:w="1"/><text x="1.3165%" y="687.50"></text></g><g><title>0x101077678 (1 samples, 0.02%)</title><rect x="1.0665%" y="661" width="0.0227%" height="15" fill="rgb(252,8,32)" fg:x="47" fg:w="1"/><text x="1.3165%" y="671.50"></text></g><g><title>0x1010856f0 (1 samples, 0.02%)</title><rect x="1.0665%" y="645" width="0.0227%" height="15" fill="rgb(223,20,43)" fg:x="47" fg:w="1"/><text x="1.3165%" y="655.50"></text></g><g><title>_platform_memmove (1 samples, 0.02%)</title><rect x="1.0665%" y="629" width="0.0227%" height="15" fill="rgb(229,81,49)" fg:x="47" fg:w="1"/><text x="1.3165%" y="639.50"></text></g><g><title>0x1011f8790 (1 samples, 0.02%)</title><rect x="1.0892%" y="709" width="0.0227%" height="15" fill="rgb(236,28,36)" fg:x="48" fg:w="1"/><text x="1.3392%" y="719.50"></text></g><g><title>__unlink (1 samples, 0.02%)</title><rect x="1.0892%" y="693" width="0.0227%" height="15" fill="rgb(249,185,26)" fg:x="48" fg:w="1"/><text x="1.3392%" y="703.50"></text></g><g><title>__psynch_cvwait (3 samples, 0.07%)</title><rect x="1.1119%" y="677" width="0.0681%" height="15" fill="rgb(249,174,33)" fg:x="49" fg:w="3"/><text x="1.3619%" y="687.50"></text></g><g><title>0x10120fc78 (4 samples, 0.09%)</title><rect x="1.1119%" y="709" width="0.0908%" height="15" fill="rgb(233,201,37)" fg:x="49" fg:w="4"/><text x="1.3619%" y="719.50"></text></g><g><title>0x1010ea5bc (4 samples, 0.09%)</title><rect x="1.1119%" y="693" width="0.0908%" height="15" fill="rgb(221,78,26)" fg:x="49" fg:w="4"/><text x="1.3619%" y="703.50"></text></g><g><title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1.1799%" y="677" width="0.0227%" height="15" fill="rgb(250,127,30)" fg:x="52" fg:w="1"/><text x="1.4299%" y="687.50"></text></g><g><title>0x101214894 (1 samples, 0.02%)</title><rect x="1.2026%" y="709" width="0.0227%" height="15" fill="rgb(230,49,44)" fg:x="53" fg:w="1"/><text x="1.4526%" y="719.50"></text></g><g><title>0x101255254 (1 samples, 0.02%)</title><rect x="1.2026%" y="693" width="0.0227%" height="15" fill="rgb(229,67,23)" fg:x="53" fg:w="1"/><text x="1.4526%" y="703.50"></text></g><g><title>0x101253ad8 (1 samples, 0.02%)</title><rect x="1.2026%" y="677" width="0.0227%" height="15" fill="rgb(249,83,47)" fg:x="53" fg:w="1"/><text x="1.4526%" y="687.50"></text></g><g><title>0x10120f7bc (1 samples, 0.02%)</title><rect x="1.2026%" y="661" width="0.0227%" height="15" fill="rgb(215,43,3)" fg:x="53" fg:w="1"/><text x="1.4526%" y="671.50"></text></g><g><title>__socketpair (1 samples, 0.02%)</title><rect x="1.2026%" y="645" width="0.0227%" height="15" fill="rgb(238,154,13)" fg:x="53" fg:w="1"/><text x="1.4526%" y="655.50"></text></g><g><title>0x1010765c8 (55 samples, 1.25%)</title><rect x="0.0000%" y="757" width="1.2480%" height="15" fill="rgb(219,56,2)" fg:x="0" fg:w="55"/><text x="0.2500%" y="767.50"></text></g><g><title>0x10100cc70 (55 samples, 1.25%)</title><rect x="0.0000%" y="741" width="1.2480%" height="15" fill="rgb(233,0,4)" fg:x="0" fg:w="55"/><text x="0.2500%" y="751.50"></text></g><g><title>0x101058f9c (55 samples, 1.25%)</title><rect x="0.0000%" y="725" width="1.2480%" height="15" fill="rgb(235,30,7)" fg:x="0" fg:w="55"/><text x="0.2500%" y="735.50"></text></g><g><title>_tlv_get_addr (1 samples, 0.02%)</title><rect x="1.2253%" y="709" width="0.0227%" height="15" fill="rgb(250,79,13)" fg:x="54" fg:w="1"/><text x="1.4753%" y="719.50"></text></g><g><title>__kdebug_trace_string (1 samples, 0.02%)</title><rect x="1.2480%" y="725" width="0.0227%" height="15" fill="rgb(211,146,34)" fg:x="55" fg:w="1"/><text x="1.4980%" y="735.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="709" width="0.0227%" height="15" fill="rgb(228,22,38)" fg:x="56" fg:w="1"/><text x="1.5207%" y="719.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUpPlusUpwardLinks(dyld4::RuntimeState&amp;) const::$_0::operator()() const (1 samples, 0.02%)</title><rect x="1.2707%" y="693" width="0.0227%" height="15" fill="rgb(235,168,5)" fg:x="56" fg:w="1"/><text x="1.5207%" y="703.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="677" width="0.0227%" height="15" fill="rgb(221,155,16)" fg:x="56" fg:w="1"/><text x="1.5207%" y="687.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="661" width="0.0227%" height="15" fill="rgb(215,215,53)" fg:x="56" fg:w="1"/><text x="1.5207%" y="671.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="645" width="0.0227%" height="15" fill="rgb(223,4,10)" fg:x="56" fg:w="1"/><text x="1.5207%" y="655.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="629" width="0.0227%" height="15" fill="rgb(234,103,6)" fg:x="56" fg:w="1"/><text x="1.5207%" y="639.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="613" width="0.0227%" height="15" fill="rgb(227,97,0)" fg:x="56" fg:w="1"/><text x="1.5207%" y="623.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="597" width="0.0227%" height="15" fill="rgb(234,150,53)" fg:x="56" fg:w="1"/><text x="1.5207%" y="607.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="581" width="0.0227%" height="15" fill="rgb(228,201,54)" fg:x="56" fg:w="1"/><text x="1.5207%" y="591.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="565" width="0.0227%" height="15" fill="rgb(222,22,37)" fg:x="56" fg:w="1"/><text x="1.5207%" y="575.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="549" width="0.0227%" height="15" fill="rgb(237,53,32)" fg:x="56" fg:w="1"/><text x="1.5207%" y="559.50"></text></g><g><title>dyld4::Loader::runInitializersBottomUp(dyld4::RuntimeState&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;, dyld3::Array&lt;dyld4::Loader const*&gt;&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="533" width="0.0227%" height="15" fill="rgb(233,25,53)" fg:x="56" fg:w="1"/><text x="1.5207%" y="543.50"></text></g><g><title>dyld4::PrebuiltLoader::dependent(dyld4::RuntimeState const&amp;, unsigned int, mach_o::LinkedDylibAttributes*) const (1 samples, 0.02%)</title><rect x="1.2707%" y="517" width="0.0227%" height="15" fill="rgb(210,40,34)" fg:x="56" fg:w="1"/><text x="1.5207%" y="527.50"></text></g><g><title>dyld4::Loader::LoaderRef::loader(dyld4::RuntimeState const&amp;) const (1 samples, 0.02%)</title><rect x="1.2707%" y="501" width="0.0227%" height="15" fill="rgb(241,220,44)" fg:x="56" fg:w="1"/><text x="1.5207%" y="511.50"></text></g><g><title>dyld4::APIs::runAllInitializersForMain() (2 samples, 0.05%)</title><rect x="1.2707%" y="725" width="0.0454%" height="15" fill="rgb(235,28,35)" fg:x="56" fg:w="2"/><text x="1.5207%" y="735.50"></text></g><g><title>dyld4::PrebuiltLoader::runInitializers(dyld4::RuntimeState&amp;) const (1 samples, 0.02%)</title><rect x="1.2934%" y="709" width="0.0227%" height="15" fill="rgb(210,56,17)" fg:x="57" fg:w="1"/><text x="1.5434%" y="719.50"></text></g><g><title>dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (1 samples, 0.02%)</title><rect x="1.2934%" y="693" width="0.0227%" height="15" fill="rgb(224,130,29)" fg:x="57" fg:w="1"/><text x="1.5434%" y="703.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (1 samples, 0.02%)</title><rect x="1.2934%" y="677" width="0.0227%" height="15" fill="rgb(235,212,8)" fg:x="57" fg:w="1"/><text x="1.5434%" y="687.50"></text></g><g><title>mach_o::Header::forEachSection(void (mach_o::Header::SectionInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.2934%" y="661" width="0.0227%" height="15" fill="rgb(223,33,50)" fg:x="57" fg:w="1"/><text x="1.5434%" y="671.50"></text></g><g><title>mach_o::Header::forEachLoadCommand(void (load_command const*, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.2934%" y="645" width="0.0227%" height="15" fill="rgb(219,149,13)" fg:x="57" fg:w="1"/><text x="1.5434%" y="655.50"></text></g><g><title>invocation function for block in mach_o::Header::forEachSection(void (mach_o::Header::SectionInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.2934%" y="629" width="0.0227%" height="15" fill="rgb(250,156,29)" fg:x="57" fg:w="1"/><text x="1.5434%" y="639.50"></text></g><g><title>invocation function for block in dyld3::MachOAnalyzer::forEachInitializer(Diagnostics&amp;, dyld3::MachOAnalyzer::VMAddrConverter const&amp;, void (unsigned int) block_pointer, void const*) const (1 samples, 0.02%)</title><rect x="1.2934%" y="613" width="0.0227%" height="15" fill="rgb(216,193,19)" fg:x="57" fg:w="1"/><text x="1.5434%" y="623.50"></text></g><g><title>invocation function for block in dyld4::Loader::findAndRunAllInitializers(dyld4::RuntimeState&amp;) const (1 samples, 0.02%)</title><rect x="1.2934%" y="597" width="0.0227%" height="15" fill="rgb(216,135,14)" fg:x="57" fg:w="1"/><text x="1.5434%" y="607.50"></text></g><g><title>libSystem_initializer (1 samples, 0.02%)</title><rect x="1.2934%" y="581" width="0.0227%" height="15" fill="rgb(241,47,5)" fg:x="57" fg:w="1"/><text x="1.5434%" y="591.50"></text></g><g><title>_libxpc_initializer (1 samples, 0.02%)</title><rect x="1.2934%" y="565" width="0.0227%" height="15" fill="rgb(233,42,35)" fg:x="57" fg:w="1"/><text x="1.5434%" y="575.50"></text></g><g><title>_platform_strncmp$VARIANT$Base (1 samples, 0.02%)</title><rect x="1.2934%" y="549" width="0.0227%" height="15" fill="rgb(231,13,6)" fg:x="57" fg:w="1"/><text x="1.5434%" y="559.50"></text></g><g><title>dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const (1 samples, 0.02%)</title><rect x="1.3161%" y="709" width="0.0227%" height="15" fill="rgb(207,181,40)" fg:x="58" fg:w="1"/><text x="1.5661%" y="719.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachRebaseLocation_Opcodes(Diagnostics&amp;, void (unsigned long long, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3161%" y="693" width="0.0227%" height="15" fill="rgb(254,173,49)" fg:x="58" fg:w="1"/><text x="1.5661%" y="703.50"></text></g><g><title>dyld3::MachOAnalyzer::forEachRebase_Opcodes(Diagnostics&amp;, dyld3::MachOLoaded::LinkEditInfo const&amp;, mach_o::Header::SegmentInfo const*, void (char const*, dyld3::MachOLoaded::LinkEditInfo const&amp;, mach_o::Header::SegmentInfo const*, bool, unsigned int, unsigned char, unsigned long long, dyld3::MachOAnalyzer::Rebase, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3161%" y="677" width="0.0227%" height="15" fill="rgb(221,1,38)" fg:x="58" fg:w="1"/><text x="1.5661%" y="687.50"></text></g><g><title>invocation function for block in dyld4::Loader::applyFixupsGeneric(Diagnostics&amp;, dyld4::RuntimeState&amp;, unsigned long long, dyld3::Array&lt;void const*&gt; const&amp;, dyld3::Array&lt;void const*&gt; const&amp;, bool, dyld3::Array&lt;dyld4::Loader::MissingFlatLazySymbol&gt; const&amp;) const (1 samples, 0.02%)</title><rect x="1.3161%" y="661" width="0.0227%" height="15" fill="rgb(206,124,46)" fg:x="58" fg:w="1"/><text x="1.5661%" y="671.50"></text></g><g><title>start (60 samples, 1.36%)</title><rect x="0.0000%" y="773" width="1.3615%" height="15" fill="rgb(249,21,11)" fg:x="0" fg:w="60"/><text x="0.2500%" y="783.50"></text></g><g><title>dyld4::start(dyld4::KernelArgs*, void*, void*)::$_0::operator()() const (5 samples, 0.11%)</title><rect x="1.2480%" y="757" width="0.1135%" height="15" fill="rgb(222,201,40)" fg:x="55" fg:w="5"/><text x="1.4980%" y="767.50"></text></g><g><title>dyld4::prepare(dyld4::APIs&amp;, mach_o::Header const*) (5 samples, 0.11%)</title><rect x="1.2480%" y="741" width="0.1135%" height="15" fill="rgb(235,61,29)" fg:x="55" fg:w="5"/><text x="1.4980%" y="751.50"></text></g><g><title>dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool, lsl::Vector&lt;std::__1::pair&lt;dyld4::Loader const*, char const*&gt;&gt;*) const (2 samples, 0.05%)</title><rect x="1.3161%" y="725" width="0.0454%" height="15" fill="rgb(219,207,3)" fg:x="58" fg:w="2"/><text x="1.5661%" y="735.50"></text></g><g><title>dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="709" width="0.0227%" height="15" fill="rgb(222,56,46)" fg:x="59" fg:w="1"/><text x="1.5888%" y="719.50"></text></g><g><title>dyld3::MachOAnalyzer::withVMLayout(Diagnostics&amp;, void (mach_o::Layout const&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="693" width="0.0227%" height="15" fill="rgb(239,76,54)" fg:x="59" fg:w="1"/><text x="1.5888%" y="703.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="677" width="0.0227%" height="15" fill="rgb(231,124,27)" fg:x="59" fg:w="1"/><text x="1.5888%" y="687.50"></text></g><g><title>mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="661" width="0.0227%" height="15" fill="rgb(249,195,6)" fg:x="59" fg:w="1"/><text x="1.5888%" y="671.50"></text></g><g><title>mach_o::Fixups::forEachBindUnified_Opcodes(Diagnostics&amp;, bool, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (unsigned long long, unsigned int, mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="645" width="0.0227%" height="15" fill="rgb(237,174,47)" fg:x="59" fg:w="1"/><text x="1.5888%" y="655.50"></text></g><g><title>mach_o::Fixups::forEachBind_OpcodesLazy(Diagnostics&amp;, void (char const*, bool, bool, unsigned int, int, unsigned int, unsigned int, unsigned long long, unsigned char, char const*, bool, bool, unsigned long long, bool, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="629" width="0.0227%" height="15" fill="rgb(206,201,31)" fg:x="59" fg:w="1"/><text x="1.5888%" y="639.50"></text></g><g><title>invocation function for block in mach_o::Fixups::forEachBindTarget_Opcodes(Diagnostics&amp;, bool, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer, void (mach_o::Fixups::BindTargetInfo const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="613" width="0.0227%" height="15" fill="rgb(231,57,52)" fg:x="59" fg:w="1"/><text x="1.5888%" y="623.50"></text></g><g><title>invocation function for block in dyld4::Loader::forEachBindTarget(Diagnostics&amp;, dyld4::RuntimeState&amp;, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer, void (dyld4::Loader::ResolvedSymbol const&amp;, bool&amp;) block_pointer) const (1 samples, 0.02%)</title><rect x="1.3388%" y="597" width="0.0227%" height="15" fill="rgb(248,177,22)" fg:x="59" fg:w="1"/><text x="1.5888%" y="607.50"></text></g><g><title>dyld4::Loader::resolveSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, int, char const*, bool, bool, void (unsigned int, unsigned int, dyld4::Loader::ResolvedSymbol const&amp;) block_pointer, bool) const (1 samples, 0.02%)</title><rect x="1.3388%" y="581" width="0.0227%" height="15" fill="rgb(215,211,37)" fg:x="59" fg:w="1"/><text x="1.5888%" y="591.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.02%)</title><rect x="1.3388%" y="565" width="0.0227%" height="15" fill="rgb(241,128,51)" fg:x="59" fg:w="1"/><text x="1.5888%" y="575.50"></text></g><g><title>dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array&lt;dyld4::Loader const*&gt;*) const (1 samples, 0.02%)</title><rect x="1.3388%" y="549" width="0.0227%" height="15" fill="rgb(227,165,31)" fg:x="59" fg:w="1"/><text x="1.5888%" y="559.50"></text></g><g><title>dyld4::PrebuiltLoader::dependent(dyld4::RuntimeState const&amp;, unsigned int, mach_o::LinkedDylibAttributes*) const (1 samples, 0.02%)</title><rect x="1.3388%" y="533" width="0.0227%" height="15" fill="rgb(228,167,24)" fg:x="59" fg:w="1"/><text x="1.5888%" y="543.50"></text></g><g><title>__103-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]_block_invoke_2 (1 samples, 0.02%)</title><rect x="1.3615%" y="565" width="0.0227%" height="15" fill="rgb(228,143,12)" fg:x="60" fg:w="1"/><text x="1.6115%" y="575.50"></text></g><g><title>__80-[CFPrefsSearchListSource alreadylocked_generationCountFromListOfSources:count:]_block_invoke (1 samples, 0.02%)</title><rect x="1.3615%" y="549" width="0.0227%" height="15" fill="rgb(249,149,8)" fg:x="60" fg:w="1"/><text x="1.6115%" y="559.50"></text></g><g><title>-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.02%)</title><rect x="1.3615%" y="533" width="0.0227%" height="15" fill="rgb(243,35,44)" fg:x="60" fg:w="1"/><text x="1.6115%" y="543.50"></text></g><g><title>xpc_array_apply (1 samples, 0.02%)</title><rect x="1.3615%" y="517" width="0.0227%" height="15" fill="rgb(246,89,9)" fg:x="60" fg:w="1"/><text x="1.6115%" y="527.50"></text></g><g><title>__93-[CFPrefsSearchListSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:]_block_invoke (1 samples, 0.02%)</title><rect x="1.3615%" y="501" width="0.0227%" height="15" fill="rgb(233,213,13)" fg:x="60" fg:w="1"/><text x="1.6115%" y="511.50"></text></g><g><title>-[CFPrefsPlistSource handleReply:toRequestNewDataMessage:onConnection:retryCount:error:] (1 samples, 0.02%)</title><rect x="1.3615%" y="485" width="0.0227%" height="15" fill="rgb(233,141,41)" fg:x="60" fg:w="1"/><text x="1.6115%" y="495.50"></text></g><g><title>CFPropertyListCreateWithData (1 samples, 0.02%)</title><rect x="1.3615%" y="469" width="0.0227%" height="15" fill="rgb(239,167,4)" fg:x="60" fg:w="1"/><text x="1.6115%" y="479.50"></text></g><g><title>_CFPropertyListCreateWithData (1 samples, 0.02%)</title><rect x="1.3615%" y="453" width="0.0227%" height="15" fill="rgb(209,217,16)" fg:x="60" fg:w="1"/><text x="1.6115%" y="463.50"></text></g><g><title>__CFTryParseBinaryPlist (1 samples, 0.02%)</title><rect x="1.3615%" y="437" width="0.0227%" height="15" fill="rgb(219,88,35)" fg:x="60" fg:w="1"/><text x="1.6115%" y="447.50"></text></g><g><title>__CFBinaryPlistCreateObjectFiltered (1 samples, 0.02%)</title><rect x="1.3615%" y="421" width="0.0227%" height="15" fill="rgb(220,193,23)" fg:x="60" fg:w="1"/><text x="1.6115%" y="431.50"></text></g><g><title>-[NSMutableDictionary __addObject:forKey:] (1 samples, 0.02%)</title><rect x="1.3615%" y="405" width="0.0227%" height="15" fill="rgb(230,90,52)" fg:x="60" fg:w="1"/><text x="1.6115%" y="415.50"></text></g><g><title>__CFStringHash (1 samples, 0.02%)</title><rect x="1.3615%" y="389" width="0.0227%" height="15" fill="rgb(252,106,19)" fg:x="60" fg:w="1"/><text x="1.6115%" y="399.50"></text></g><g><title>start_wqthread (2 samples, 0.05%)</title><rect x="1.3615%" y="773" width="0.0454%" height="15" fill="rgb(206,74,20)" fg:x="60" fg:w="2"/><text x="1.6115%" y="783.50"></text></g><g><title>_pthread_wqthread (2 samples, 0.05%)</title><rect x="1.3615%" y="757" width="0.0454%" height="15" fill="rgb(230,138,44)" fg:x="60" fg:w="2"/><text x="1.6115%" y="767.50"></text></g><g><title>_dispatch_worker_thread2 (2 samples, 0.05%)</title><rect x="1.3615%" y="741" width="0.0454%" height="15" fill="rgb(235,182,43)" fg:x="60" fg:w="2"/><text x="1.6115%" y="751.50"></text></g><g><title>_dispatch_root_queue_drain (2 samples, 0.05%)</title><rect x="1.3615%" y="725" width="0.0454%" height="15" fill="rgb(242,16,51)" fg:x="60" fg:w="2"/><text x="1.6115%" y="735.50"></text></g><g><title>_dispatch_channel_invoke.cold.5 (2 samples, 0.05%)</title><rect x="1.3615%" y="709" width="0.0454%" height="15" fill="rgb(248,9,4)" fg:x="60" fg:w="2"/><text x="1.6115%" y="719.50"></text></g><g><title>_dispatch_client_callout (2 samples, 0.05%)</title><rect x="1.3615%" y="693" width="0.0454%" height="15" fill="rgb(210,31,22)" fg:x="60" fg:w="2"/><text x="1.6115%" y="703.50"></text></g><g><title>_dispatch_apply_invoke (2 samples, 0.05%)</title><rect x="1.3615%" y="677" width="0.0454%" height="15" fill="rgb(239,54,39)" fg:x="60" fg:w="2"/><text x="1.6115%" y="687.50"></text></g><g><title>_dispatch_once_callout (2 samples, 0.05%)</title><rect x="1.3615%" y="661" width="0.0454%" height="15" fill="rgb(230,99,41)" fg:x="60" fg:w="2"/><text x="1.6115%" y="671.50"></text></g><g><title>_dispatch_client_callout (2 samples, 0.05%)</title><rect x="1.3615%" y="645" width="0.0454%" height="15" fill="rgb(253,106,12)" fg:x="60" fg:w="2"/><text x="1.6115%" y="655.50"></text></g><g><title>_dispatch_apply_invoke3 (2 samples, 0.05%)</title><rect x="1.3615%" y="629" width="0.0454%" height="15" fill="rgb(213,46,41)" fg:x="60" fg:w="2"/><text x="1.6115%" y="639.50"></text></g><g><title>_dispatch_client_callout2 (2 samples, 0.05%)</title><rect x="1.3615%" y="613" width="0.0454%" height="15" fill="rgb(215,133,35)" fg:x="60" fg:w="2"/><text x="1.6115%" y="623.50"></text></g><g><title>__103-[CFPrefsSearchListSource synchronouslySendSystemMessage:andUserMessage:andDirectMessage:replyHandler:]_block_invoke (2 samples, 0.05%)</title><rect x="1.3615%" y="597" width="0.0454%" height="15" fill="rgb(213,28,5)" fg:x="60" fg:w="2"/><text x="1.6115%" y="607.50"></text></g><g><title>-[_CFXPreferences withConnectionForRole:andUserIdentifier:performBlock:] (2 samples, 0.05%)</title><rect x="1.3615%" y="581" width="0.0454%" height="15" fill="rgb(215,77,49)" fg:x="60" fg:w="2"/><text x="1.6115%" y="591.50"></text></g><g><title>_xpc_dictionary_dispose (1 samples, 0.02%)</title><rect x="1.3842%" y="565" width="0.0227%" height="15" fill="rgb(248,100,22)" fg:x="61" fg:w="1"/><text x="1.6342%" y="575.50"></text></g><g><title>0x101007a24 (2 samples, 0.05%)</title><rect x="1.4069%" y="677" width="0.0454%" height="15" fill="rgb(208,67,9)" fg:x="62" fg:w="2"/><text x="1.6569%" y="687.50"></text></g><g><title>0x1011eedcc (2 samples, 0.05%)</title><rect x="1.4069%" y="661" width="0.0454%" height="15" fill="rgb(219,133,21)" fg:x="62" fg:w="2"/><text x="1.6569%" y="671.50"></text></g><g><title>_dispatch_semaphore_wait_slow (2 samples, 0.05%)</title><rect x="1.4069%" y="645" width="0.0454%" height="15" fill="rgb(246,46,29)" fg:x="62" fg:w="2"/><text x="1.6569%" y="655.50"></text></g><g><title>semaphore_wait_trap (2 samples, 0.05%)</title><rect x="1.4069%" y="629" width="0.0454%" height="15" fill="rgb(246,185,52)" fg:x="62" fg:w="2"/><text x="1.6569%" y="639.50"></text></g><g><title>0x101003c50 (5 samples, 0.11%)</title><rect x="1.4069%" y="693" width="0.1135%" height="15" fill="rgb(252,136,11)" fg:x="62" fg:w="5"/><text x="1.6569%" y="703.50"></text></g><g><title>swtch_pri (3 samples, 0.07%)</title><rect x="1.4522%" y="677" width="0.0681%" height="15" fill="rgb(219,138,53)" fg:x="64" fg:w="3"/><text x="1.7022%" y="687.50"></text></g><g><title>0x101012878 (19 samples, 0.43%)</title><rect x="1.4069%" y="725" width="0.4311%" height="15" fill="rgb(211,51,23)" fg:x="62" fg:w="19"/><text x="1.6569%" y="735.50"></text></g><g><title>0x10100cc84 (19 samples, 0.43%)</title><rect x="1.4069%" y="709" width="0.4311%" height="15" fill="rgb(247,221,28)" fg:x="62" fg:w="19"/><text x="1.6569%" y="719.50"></text></g><g><title>write (14 samples, 0.32%)</title><rect x="1.5203%" y="693" width="0.3177%" height="15" fill="rgb(251,222,45)" fg:x="67" fg:w="14"/><text x="1.7703%" y="703.50"></text></g><g><title>0x101003c50 (1 samples, 0.02%)</title><rect x="1.8380%" y="693" width="0.0227%" height="15" fill="rgb(217,162,53)" fg:x="81" fg:w="1"/><text x="2.0880%" y="703.50"></text></g><g><title>swtch_pri (1 samples, 0.02%)</title><rect x="1.8380%" y="677" width="0.0227%" height="15" fill="rgb(229,93,14)" fg:x="81" fg:w="1"/><text x="2.0880%" y="687.50"></text></g><g><title>0x1011edbac (1 samples, 0.02%)</title><rect x="1.8607%" y="693" width="0.0227%" height="15" fill="rgb(209,67,49)" fg:x="82" fg:w="1"/><text x="2.1107%" y="703.50"></text></g><g><title>0x101012d24 (5 samples, 0.11%)</title><rect x="1.8380%" y="725" width="0.1135%" height="15" fill="rgb(213,87,29)" fg:x="81" fg:w="5"/><text x="2.0880%" y="735.50"></text></g><g><title>0x10100cfc8 (5 samples, 0.11%)</title><rect x="1.8380%" y="709" width="0.1135%" height="15" fill="rgb(205,151,52)" fg:x="81" fg:w="5"/><text x="2.0880%" y="719.50"></text></g><g><title>write (3 samples, 0.07%)</title><rect x="1.8834%" y="693" width="0.0681%" height="15" fill="rgb(253,215,39)" fg:x="83" fg:w="3"/><text x="2.1334%" y="703.50"></text></g><g><title>0x101013100 (1 samples, 0.02%)</title><rect x="1.9514%" y="725" width="0.0227%" height="15" fill="rgb(221,220,41)" fg:x="86" fg:w="1"/><text x="2.2014%" y="735.50"></text></g><g><title>0x101010284 (1 samples, 0.02%)</title><rect x="1.9514%" y="709" width="0.0227%" height="15" fill="rgb(218,133,21)" fg:x="86" fg:w="1"/><text x="2.2014%" y="719.50"></text></g><g><title>0x100fff4e4 (1 samples, 0.02%)</title><rect x="1.9514%" y="693" width="0.0227%" height="15" fill="rgb(221,193,43)" fg:x="86" fg:w="1"/><text x="2.2014%" y="703.50"></text></g><g><title>0x101010260 (1 samples, 0.02%)</title><rect x="1.9514%" y="677" width="0.0227%" height="15" fill="rgb(240,128,52)" fg:x="86" fg:w="1"/><text x="2.2014%" y="687.50"></text></g><g><title>0x10100cc70 (1 samples, 0.02%)</title><rect x="1.9514%" y="661" width="0.0227%" height="15" fill="rgb(253,114,12)" fg:x="86" fg:w="1"/><text x="2.2014%" y="671.50"></text></g><g><title>0x10104e6c4 (1 samples, 0.02%)</title><rect x="1.9514%" y="645" width="0.0227%" height="15" fill="rgb(215,223,47)" fg:x="86" fg:w="1"/><text x="2.2014%" y="655.50"></text></g><g><title>0x100ffa084 (1 samples, 0.02%)</title><rect x="1.9514%" y="629" width="0.0227%" height="15" fill="rgb(248,225,23)" fg:x="86" fg:w="1"/><text x="2.2014%" y="639.50"></text></g><g><title>0x10100ede4 (1 samples, 0.02%)</title><rect x="1.9514%" y="613" width="0.0227%" height="15" fill="rgb(250,108,0)" fg:x="86" fg:w="1"/><text x="2.2014%" y="623.50"></text></g><g><title>0x10121a56c (1 samples, 0.02%)</title><rect x="1.9514%" y="597" width="0.0227%" height="15" fill="rgb(228,208,7)" fg:x="86" fg:w="1"/><text x="2.2014%" y="607.50"></text></g><g><title>0x10121b824 (1 samples, 0.02%)</title><rect x="1.9514%" y="581" width="0.0227%" height="15" fill="rgb(244,45,10)" fg:x="86" fg:w="1"/><text x="2.2014%" y="591.50"></text></g><g><title>_dispatch_semaphore_signal_slow (1 samples, 0.02%)</title><rect x="1.9514%" y="565" width="0.0227%" height="15" fill="rgb(207,125,25)" fg:x="86" fg:w="1"/><text x="2.2014%" y="575.50"></text></g><g><title>_dispatch_sema4_signal (1 samples, 0.02%)</title><rect x="1.9514%" y="549" width="0.0227%" height="15" fill="rgb(210,195,18)" fg:x="86" fg:w="1"/><text x="2.2014%" y="559.50"></text></g><g><title>semaphore_signal_trap (1 samples, 0.02%)</title><rect x="1.9514%" y="533" width="0.0227%" height="15" fill="rgb(249,80,12)" fg:x="86" fg:w="1"/><text x="2.2014%" y="543.50"></text></g><g><title>nw_path_libinfo_path_check (1 samples, 0.02%)</title><rect x="1.9741%" y="629" width="0.0227%" height="15" fill="rgb(221,65,9)" fg:x="87" fg:w="1"/><text x="2.2241%" y="639.50"></text></g><g><title>nw_parameters_create_legacy_tcp_socket (1 samples, 0.02%)</title><rect x="1.9741%" y="613" width="0.0227%" height="15" fill="rgb(235,49,36)" fg:x="87" fg:w="1"/><text x="2.2241%" y="623.50"></text></g><g><title>nw_parameters_create (1 samples, 0.02%)</title><rect x="1.9741%" y="597" width="0.0227%" height="15" fill="rgb(225,32,20)" fg:x="87" fg:w="1"/><text x="2.2241%" y="607.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.02%)</title><rect x="1.9741%" y="581" width="0.0227%" height="15" fill="rgb(215,141,46)" fg:x="87" fg:w="1"/><text x="2.2241%" y="591.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.02%)</title><rect x="1.9741%" y="565" width="0.0227%" height="15" fill="rgb(250,160,47)" fg:x="87" fg:w="1"/><text x="2.2241%" y="575.50"></text></g><g><title>invocation function for block in nw_protocol_setup_ip_definition() (1 samples, 0.02%)</title><rect x="1.9741%" y="549" width="0.0227%" height="15" fill="rgb(216,222,40)" fg:x="87" fg:w="1"/><text x="2.2241%" y="559.50"></text></g><g><title>_dispatch_once_callout (1 samples, 0.02%)</title><rect x="1.9741%" y="533" width="0.0227%" height="15" fill="rgb(234,217,39)" fg:x="87" fg:w="1"/><text x="2.2241%" y="543.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.02%)</title><rect x="1.9741%" y="517" width="0.0227%" height="15" fill="rgb(207,178,40)" fg:x="87" fg:w="1"/><text x="2.2241%" y="527.50"></text></g><g><title>nw_protocol_register_extended (1 samples, 0.02%)</title><rect x="1.9741%" y="501" width="0.0227%" height="15" fill="rgb(221,136,13)" fg:x="87" fg:w="1"/><text x="2.2241%" y="511.50"></text></g><g><title>nw_allow_use_of_dispatch_internal (1 samples, 0.02%)</title><rect x="1.9741%" y="485" width="0.0227%" height="15" fill="rgb(249,199,10)" fg:x="87" fg:w="1"/><text x="2.2241%" y="495.50"></text></g><g><title>networkd_settings_init (1 samples, 0.02%)</title><rect x="1.9741%" y="469" width="0.0227%" height="15" fill="rgb(249,222,13)" fg:x="87" fg:w="1"/><text x="2.2241%" y="479.50"></text></g><g><title>networkd_settings_read_from_file() (1 samples, 0.02%)</title><rect x="1.9741%" y="453" width="0.0227%" height="15" fill="rgb(244,185,38)" fg:x="87" fg:w="1"/><text x="2.2241%" y="463.50"></text></g><g><title>xpc_create_from_plist (1 samples, 0.02%)</title><rect x="1.9741%" y="437" width="0.0227%" height="15" fill="rgb(236,202,9)" fg:x="87" fg:w="1"/><text x="2.2241%" y="447.50"></text></g><g><title>_xpc_plist_parse_xml (1 samples, 0.02%)</title><rect x="1.9741%" y="421" width="0.0227%" height="15" fill="rgb(250,229,37)" fg:x="87" fg:w="1"/><text x="2.2241%" y="431.50"></text></g><g><title>_xpc_xml_parser_string_terminate (1 samples, 0.02%)</title><rect x="1.9741%" y="405" width="0.0227%" height="15" fill="rgb(206,174,23)" fg:x="87" fg:w="1"/><text x="2.2241%" y="415.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.9741%" y="389" width="0.0227%" height="15" fill="rgb(211,33,43)" fg:x="87" fg:w="1"/><text x="2.2241%" y="399.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="1.9741%" y="373" width="0.0227%" height="15" fill="rgb(245,58,50)" fg:x="87" fg:w="1"/><text x="2.2241%" y="383.50"></text></g><g><title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="1.9741%" y="357" width="0.0227%" height="15" fill="rgb(244,68,36)" fg:x="87" fg:w="1"/><text x="2.2241%" y="367.50"></text></g><g><title>0x1010db2f8 (2 samples, 0.05%)</title><rect x="1.9741%" y="693" width="0.0454%" height="15" fill="rgb(232,229,15)" fg:x="87" fg:w="2"/><text x="2.2241%" y="703.50"></text></g><g><title>0x1011f2b14 (2 samples, 0.05%)</title><rect x="1.9741%" y="677" width="0.0454%" height="15" fill="rgb(254,30,23)" fg:x="87" fg:w="2"/><text x="2.2241%" y="687.50"></text></g><g><title>getaddrinfo (2 samples, 0.05%)</title><rect x="1.9741%" y="661" width="0.0454%" height="15" fill="rgb(235,160,14)" fg:x="87" fg:w="2"/><text x="2.2241%" y="671.50"></text></g><g><title>si_addrinfo (2 samples, 0.05%)</title><rect x="1.9741%" y="645" width="0.0454%" height="15" fill="rgb(212,155,44)" fg:x="87" fg:w="2"/><text x="2.2241%" y="655.50"></text></g><g><title>search_addrinfo (1 samples, 0.02%)</title><rect x="1.9968%" y="629" width="0.0227%" height="15" fill="rgb(226,2,50)" fg:x="88" fg:w="1"/><text x="2.2468%" y="639.50"></text></g><g><title>mdns_addrinfo (1 samples, 0.02%)</title><rect x="1.9968%" y="613" width="0.0227%" height="15" fill="rgb(234,177,6)" fg:x="88" fg:w="1"/><text x="2.2468%" y="623.50"></text></g><g><title>_mdns_search_ex (1 samples, 0.02%)</title><rect x="1.9968%" y="597" width="0.0227%" height="15" fill="rgb(217,24,9)" fg:x="88" fg:w="1"/><text x="2.2468%" y="607.50"></text></g><g><title>_mdns_query_start (1 samples, 0.02%)</title><rect x="1.9968%" y="581" width="0.0227%" height="15" fill="rgb(220,13,46)" fg:x="88" fg:w="1"/><text x="2.2468%" y="591.50"></text></g><g><title>DNSServiceQueryRecordInternal (1 samples, 0.02%)</title><rect x="1.9968%" y="565" width="0.0227%" height="15" fill="rgb(239,221,27)" fg:x="88" fg:w="1"/><text x="2.2468%" y="575.50"></text></g><g><title>__select_nocancel (1 samples, 0.02%)</title><rect x="1.9968%" y="549" width="0.0227%" height="15" fill="rgb(222,198,25)" fg:x="88" fg:w="1"/><text x="2.2468%" y="559.50"></text></g><g><title>0x10120aeb8 (1 samples, 0.02%)</title><rect x="2.0195%" y="693" width="0.0227%" height="15" fill="rgb(211,99,13)" fg:x="89" fg:w="1"/><text x="2.2695%" y="703.50"></text></g><g><title>0x1011f2b14 (1 samples, 0.02%)</title><rect x="2.0195%" y="677" width="0.0227%" height="15" fill="rgb(232,111,31)" fg:x="89" fg:w="1"/><text x="2.2695%" y="687.50"></text></g><g><title>getaddrinfo (1 samples, 0.02%)</title><rect x="2.0195%" y="661" width="0.0227%" height="15" fill="rgb(245,82,37)" fg:x="89" fg:w="1"/><text x="2.2695%" y="671.50"></text></g><g><title>si_addrinfo (1 samples, 0.02%)</title><rect x="2.0195%" y="645" width="0.0227%" height="15" fill="rgb(227,149,46)" fg:x="89" fg:w="1"/><text x="2.2695%" y="655.50"></text></g><g><title>nw_path_libinfo_path_check (1 samples, 0.02%)</title><rect x="2.0195%" y="629" width="0.0227%" height="15" fill="rgb(218,36,50)" fg:x="89" fg:w="1"/><text x="2.2695%" y="639.50"></text></g><g><title>nw_path_create_evaluator_for_endpoint (1 samples, 0.02%)</title><rect x="2.0195%" y="613" width="0.0227%" height="15" fill="rgb(226,80,48)" fg:x="89" fg:w="1"/><text x="2.2695%" y="623.50"></text></g><g><title>necp_client_action (1 samples, 0.02%)</title><rect x="2.0195%" y="597" width="0.0227%" height="15" fill="rgb(238,224,15)" fg:x="89" fg:w="1"/><text x="2.2695%" y="607.50"></text></g><g><title>mach_absolute_time (2 samples, 0.05%)</title><rect x="2.1103%" y="629" width="0.0454%" height="15" fill="rgb(241,136,10)" fg:x="93" fg:w="2"/><text x="2.3603%" y="639.50"></text></g><g><title>clock_gettime_nsec_np (5 samples, 0.11%)</title><rect x="2.0649%" y="645" width="0.1135%" height="15" fill="rgb(208,32,45)" fg:x="91" fg:w="5"/><text x="2.3149%" y="655.50"></text></g><g><title>mach_timebase_info (1 samples, 0.02%)</title><rect x="2.1557%" y="629" width="0.0227%" height="15" fill="rgb(207,135,9)" fg:x="95" fg:w="1"/><text x="2.4057%" y="639.50"></text></g><g><title>0x1011eebc0 (7 samples, 0.16%)</title><rect x="2.0422%" y="677" width="0.1588%" height="15" fill="rgb(206,86,44)" fg:x="90" fg:w="7"/><text x="2.2922%" y="687.50"></text></g><g><title>clock_gettime (6 samples, 0.14%)</title><rect x="2.0649%" y="661" width="0.1361%" height="15" fill="rgb(245,177,15)" fg:x="91" fg:w="6"/><text x="2.3149%" y="671.50"></text></g><g><title>mach_absolute_time (1 samples, 0.02%)</title><rect x="2.1784%" y="645" width="0.0227%" height="15" fill="rgb(206,64,50)" fg:x="96" fg:w="1"/><text x="2.4284%" y="655.50"></text></g><g><title>0x1011eecd4 (3 samples, 0.07%)</title><rect x="2.2010%" y="677" width="0.0681%" height="15" fill="rgb(234,36,40)" fg:x="97" fg:w="3"/><text x="2.4510%" y="687.50"></text></g><g><title>__psynch_cvwait (10 samples, 0.23%)</title><rect x="2.4733%" y="645" width="0.2269%" height="15" fill="rgb(213,64,8)" fg:x="109" fg:w="10"/><text x="2.7233%" y="655.50"></text></g><g><title>0x1010ea5bc (12 samples, 0.27%)</title><rect x="2.4506%" y="661" width="0.2723%" height="15" fill="rgb(210,75,36)" fg:x="108" fg:w="12"/><text x="2.7006%" y="671.50"></text></g><g><title>pthread_testcancel (1 samples, 0.02%)</title><rect x="2.7002%" y="645" width="0.0227%" height="15" fill="rgb(229,88,21)" fg:x="119" fg:w="1"/><text x="2.9502%" y="655.50"></text></g><g><title>0x101210488 (7 samples, 0.16%)</title><rect x="2.7229%" y="661" width="0.1588%" height="15" fill="rgb(252,204,47)" fg:x="120" fg:w="7"/><text x="2.9729%" y="671.50"></text></g><g><title>DYLD-STUB$$clock_gettime (3 samples, 0.07%)</title><rect x="3.2221%" y="629" width="0.0681%" height="15" fill="rgb(208,77,27)" fg:x="142" fg:w="3"/><text x="3.4721%" y="639.50"></text></g><g><title>mach_absolute_time (2 samples, 0.05%)</title><rect x="3.4491%" y="597" width="0.0454%" height="15" fill="rgb(221,76,26)" fg:x="152" fg:w="2"/><text x="3.6991%" y="607.50"></text></g><g><title>clock_gettime_nsec_np (14 samples, 0.32%)</title><rect x="3.3583%" y="613" width="0.3177%" height="15" fill="rgb(225,139,18)" fg:x="148" fg:w="14"/><text x="3.6083%" y="623.50"></text></g><g><title>mach_timebase_info (8 samples, 0.18%)</title><rect x="3.4944%" y="597" width="0.1815%" height="15" fill="rgb(230,137,11)" fg:x="154" fg:w="8"/><text x="3.7444%" y="607.50"></text></g><g><title>clock_gettime (19 samples, 0.43%)</title><rect x="3.2902%" y="629" width="0.4311%" height="15" fill="rgb(212,28,1)" fg:x="145" fg:w="19"/><text x="3.5402%" y="639.50"></text></g><g><title>mach_timebase_info (2 samples, 0.05%)</title><rect x="3.6760%" y="613" width="0.0454%" height="15" fill="rgb(248,164,17)" fg:x="162" fg:w="2"/><text x="3.9260%" y="623.50"></text></g><g><title>0x1011eebc0 (28 samples, 0.64%)</title><rect x="3.1314%" y="645" width="0.6354%" height="15" fill="rgb(222,171,42)" fg:x="138" fg:w="28"/><text x="3.3814%" y="655.50"></text></g><g><title>clock_gettime_nsec_np (2 samples, 0.05%)</title><rect x="3.7214%" y="629" width="0.0454%" height="15" fill="rgb(243,84,45)" fg:x="164" fg:w="2"/><text x="3.9714%" y="639.50"></text></g><g><title>0x1011eecd4 (3 samples, 0.07%)</title><rect x="3.7667%" y="645" width="0.0681%" height="15" fill="rgb(252,49,23)" fg:x="166" fg:w="3"/><text x="4.0167%" y="655.50"></text></g><g><title>0x10102818c (5 samples, 0.11%)</title><rect x="5.1055%" y="581" width="0.1135%" height="15" fill="rgb(215,19,7)" fg:x="225" fg:w="5"/><text x="5.3555%" y="591.50"></text></g><g><title>0x101213bc8 (3 samples, 0.07%)</title><rect x="5.4913%" y="565" width="0.0681%" height="15" fill="rgb(238,81,41)" fg:x="242" fg:w="3"/><text x="5.7413%" y="575.50"></text></g><g><title>0x101213ae0 (16 samples, 0.36%)</title><rect x="5.2190%" y="581" width="0.3631%" height="15" fill="rgb(210,199,37)" fg:x="230" fg:w="16"/><text x="5.4690%" y="591.50"></text></g><g><title>_tlv_get_addr (1 samples, 0.02%)</title><rect x="5.5593%" y="565" width="0.0227%" height="15" fill="rgb(244,192,49)" fg:x="245" fg:w="1"/><text x="5.8093%" y="575.50"></text></g><g><title>0x10120866c (64 samples, 1.45%)</title><rect x="4.2659%" y="629" width="1.4522%" height="15" fill="rgb(226,211,11)" fg:x="188" fg:w="64"/><text x="4.5159%" y="639.50"></text></g><g><title>0x101002da8 (59 samples, 1.34%)</title><rect x="4.3794%" y="613" width="1.3388%" height="15" fill="rgb(236,162,54)" fg:x="193" fg:w="59"/><text x="4.6294%" y="623.50"></text></g><g><title>0x101206880 (39 samples, 0.88%)</title><rect x="4.8332%" y="597" width="0.8850%" height="15" fill="rgb(220,229,9)" fg:x="213" fg:w="39"/><text x="5.0832%" y="607.50"></text></g><g><title>_tlv_get_addr (6 samples, 0.14%)</title><rect x="5.5820%" y="581" width="0.1361%" height="15" fill="rgb(250,87,22)" fg:x="246" fg:w="6"/><text x="5.8320%" y="591.50"></text></g><g><title>DYLD-STUB$$kevent (1 samples, 0.02%)</title><rect x="5.7182%" y="629" width="0.0227%" height="15" fill="rgb(239,43,17)" fg:x="252" fg:w="1"/><text x="5.9682%" y="639.50"></text></g><g><title>0x101210b3c (261 samples, 5.92%)</title><rect x="3.8348%" y="645" width="5.9224%" height="15" fill="rgb(231,177,25)" fg:x="169" fg:w="261"/><text x="4.0848%" y="655.50">0x101210..</text></g><g><title>kevent (177 samples, 4.02%)</title><rect x="5.7409%" y="629" width="4.0163%" height="15" fill="rgb(219,179,1)" fg:x="253" fg:w="177"/><text x="5.9909%" y="639.50">keve..</text></g><g><title>0x101211094 (6 samples, 0.14%)</title><rect x="9.7572%" y="645" width="0.1361%" height="15" fill="rgb(238,219,53)" fg:x="430" fg:w="6"/><text x="10.0072%" y="655.50"></text></g><g><title>0x101211560 (2 samples, 0.05%)</title><rect x="9.8934%" y="645" width="0.0454%" height="15" fill="rgb(232,167,36)" fg:x="436" fg:w="2"/><text x="10.1434%" y="655.50"></text></g><g><title>clock_gettime (1 samples, 0.02%)</title><rect x="9.9387%" y="645" width="0.0227%" height="15" fill="rgb(244,19,51)" fg:x="438" fg:w="1"/><text x="10.1887%" y="655.50"></text></g><g><title>0x101210638 (428 samples, 9.71%)</title><rect x="2.8818%" y="661" width="9.7118%" height="15" fill="rgb(224,6,22)" fg:x="127" fg:w="428"/><text x="3.1318%" y="671.50">0x101210638</text></g><g><title>kevent (116 samples, 2.63%)</title><rect x="9.9614%" y="645" width="2.6322%" height="15" fill="rgb(224,145,5)" fg:x="439" fg:w="116"/><text x="10.2114%" y="655.50">ke..</text></g><g><title>0x101212d54 (471 samples, 10.69%)</title><rect x="2.2691%" y="677" width="10.6875%" height="15" fill="rgb(234,130,49)" fg:x="100" fg:w="471"/><text x="2.5191%" y="687.50">0x101212d54</text></g><g><title>0x1012118f0 (16 samples, 0.36%)</title><rect x="12.5936%" y="661" width="0.3631%" height="15" fill="rgb(254,6,2)" fg:x="555" fg:w="16"/><text x="12.8436%" y="671.50"></text></g><g><title>0x101211560 (10 samples, 0.23%)</title><rect x="12.7297%" y="645" width="0.2269%" height="15" fill="rgb(208,96,46)" fg:x="561" fg:w="10"/><text x="12.9797%" y="655.50"></text></g><g><title>0x101024ea4 (2 samples, 0.05%)</title><rect x="13.1382%" y="661" width="0.0454%" height="15" fill="rgb(239,3,39)" fg:x="579" fg:w="2"/><text x="13.3882%" y="671.50"></text></g><g><title>0x101048a78 (1 samples, 0.02%)</title><rect x="13.1609%" y="645" width="0.0227%" height="15" fill="rgb(233,210,1)" fg:x="580" fg:w="1"/><text x="13.4109%" y="655.50"></text></g><g><title>0x10103229c (1 samples, 0.02%)</title><rect x="13.1609%" y="629" width="0.0227%" height="15" fill="rgb(244,137,37)" fg:x="580" fg:w="1"/><text x="13.4109%" y="639.50"></text></g><g><title>0x101048a78 (2 samples, 0.05%)</title><rect x="13.1836%" y="645" width="0.0454%" height="15" fill="rgb(240,136,2)" fg:x="581" fg:w="2"/><text x="13.4336%" y="655.50"></text></g><g><title>0x101025cb4 (3 samples, 0.07%)</title><rect x="13.1836%" y="661" width="0.0681%" height="15" fill="rgb(239,18,37)" fg:x="581" fg:w="3"/><text x="13.4336%" y="671.50"></text></g><g><title>DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="13.2290%" y="645" width="0.0227%" height="15" fill="rgb(218,185,22)" fg:x="583" fg:w="1"/><text x="13.4790%" y="655.50"></text></g><g><title>0x10102a684 (1 samples, 0.02%)</title><rect x="13.2516%" y="645" width="0.0227%" height="15" fill="rgb(225,218,4)" fg:x="584" fg:w="1"/><text x="13.5016%" y="655.50"></text></g><g><title>free_tiny (1 samples, 0.02%)</title><rect x="13.2516%" y="629" width="0.0227%" height="15" fill="rgb(230,182,32)" fg:x="584" fg:w="1"/><text x="13.5016%" y="639.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="13.2516%" y="613" width="0.0227%" height="15" fill="rgb(242,56,43)" fg:x="584" fg:w="1"/><text x="13.5016%" y="623.50"></text></g><g><title>tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="13.2516%" y="597" width="0.0227%" height="15" fill="rgb(233,99,24)" fg:x="584" fg:w="1"/><text x="13.5016%" y="607.50"></text></g><g><title>0x101016748 (1 samples, 0.02%)</title><rect x="13.2970%" y="629" width="0.0227%" height="15" fill="rgb(234,209,42)" fg:x="586" fg:w="1"/><text x="13.5470%" y="639.50"></text></g><g><title>0x10101ac74 (1 samples, 0.02%)</title><rect x="13.3197%" y="629" width="0.0227%" height="15" fill="rgb(227,7,12)" fg:x="587" fg:w="1"/><text x="13.5697%" y="639.50"></text></g><g><title>0x10101c11c (1 samples, 0.02%)</title><rect x="13.3424%" y="613" width="0.0227%" height="15" fill="rgb(245,203,43)" fg:x="588" fg:w="1"/><text x="13.5924%" y="623.50"></text></g><g><title>0x101020654 (1 samples, 0.02%)</title><rect x="13.3651%" y="597" width="0.0227%" height="15" fill="rgb(238,205,33)" fg:x="589" fg:w="1"/><text x="13.6151%" y="607.50"></text></g><g><title>0x101021ff8 (1 samples, 0.02%)</title><rect x="13.3651%" y="581" width="0.0227%" height="15" fill="rgb(231,56,7)" fg:x="589" fg:w="1"/><text x="13.6151%" y="591.50"></text></g><g><title>0x1011b659c (1 samples, 0.02%)</title><rect x="13.3878%" y="597" width="0.0227%" height="15" fill="rgb(244,186,29)" fg:x="590" fg:w="1"/><text x="13.6378%" y="607.50"></text></g><g><title>0x101213ebc (1 samples, 0.02%)</title><rect x="13.3878%" y="581" width="0.0227%" height="15" fill="rgb(234,111,31)" fg:x="590" fg:w="1"/><text x="13.6378%" y="591.50"></text></g><g><title>0x101213fd0 (1 samples, 0.02%)</title><rect x="13.3878%" y="565" width="0.0227%" height="15" fill="rgb(241,149,10)" fg:x="590" fg:w="1"/><text x="13.6378%" y="575.50"></text></g><g><title>0x101034158 (3 samples, 0.07%)</title><rect x="13.3651%" y="613" width="0.0681%" height="15" fill="rgb(249,206,44)" fg:x="589" fg:w="3"/><text x="13.6151%" y="623.50"></text></g><g><title>free_tiny (1 samples, 0.02%)</title><rect x="13.4105%" y="597" width="0.0227%" height="15" fill="rgb(251,153,30)" fg:x="591" fg:w="1"/><text x="13.6605%" y="607.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="13.4105%" y="581" width="0.0227%" height="15" fill="rgb(239,152,38)" fg:x="591" fg:w="1"/><text x="13.6605%" y="591.50"></text></g><g><title>tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="13.4105%" y="565" width="0.0227%" height="15" fill="rgb(249,139,47)" fg:x="591" fg:w="1"/><text x="13.6605%" y="575.50"></text></g><g><title>0x1011c68c4 (1 samples, 0.02%)</title><rect x="13.4332%" y="581" width="0.0227%" height="15" fill="rgb(244,64,35)" fg:x="592" fg:w="1"/><text x="13.6832%" y="591.50"></text></g><g><title>0x101088518 (1 samples, 0.02%)</title><rect x="13.4332%" y="565" width="0.0227%" height="15" fill="rgb(216,46,15)" fg:x="592" fg:w="1"/><text x="13.6832%" y="575.50"></text></g><g><title>0x101037c8c (2 samples, 0.05%)</title><rect x="13.4332%" y="613" width="0.0454%" height="15" fill="rgb(250,74,19)" fg:x="592" fg:w="2"/><text x="13.6832%" y="623.50"></text></g><g><title>0x101036530 (2 samples, 0.05%)</title><rect x="13.4332%" y="597" width="0.0454%" height="15" fill="rgb(249,42,33)" fg:x="592" fg:w="2"/><text x="13.6832%" y="607.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.4559%" y="581" width="0.0227%" height="15" fill="rgb(242,149,17)" fg:x="593" fg:w="1"/><text x="13.7059%" y="591.50"></text></g><g><title>tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="13.4559%" y="565" width="0.0227%" height="15" fill="rgb(244,29,21)" fg:x="593" fg:w="1"/><text x="13.7059%" y="575.50"></text></g><g><title>tiny_malloc_from_free_list (1 samples, 0.02%)</title><rect x="13.4559%" y="549" width="0.0227%" height="15" fill="rgb(220,130,37)" fg:x="593" fg:w="1"/><text x="13.7059%" y="559.50"></text></g><g><title>0x101077678 (2 samples, 0.05%)</title><rect x="13.4786%" y="613" width="0.0454%" height="15" fill="rgb(211,67,2)" fg:x="594" fg:w="2"/><text x="13.7286%" y="623.50"></text></g><g><title>0x1010856f0 (1 samples, 0.02%)</title><rect x="13.5012%" y="597" width="0.0227%" height="15" fill="rgb(235,68,52)" fg:x="595" fg:w="1"/><text x="13.7512%" y="607.50"></text></g><g><title>0x1011b3008 (3 samples, 0.07%)</title><rect x="13.5239%" y="613" width="0.0681%" height="15" fill="rgb(246,142,3)" fg:x="596" fg:w="3"/><text x="13.7739%" y="623.50"></text></g><g><title>0x10116dbd8 (3 samples, 0.07%)</title><rect x="13.5239%" y="597" width="0.0681%" height="15" fill="rgb(241,25,7)" fg:x="596" fg:w="3"/><text x="13.7739%" y="607.50"></text></g><g><title>0x101174fe8 (1 samples, 0.02%)</title><rect x="13.5693%" y="581" width="0.0227%" height="15" fill="rgb(242,119,39)" fg:x="598" fg:w="1"/><text x="13.8193%" y="591.50"></text></g><g><title>0x1011b7e38 (1 samples, 0.02%)</title><rect x="13.5920%" y="613" width="0.0227%" height="15" fill="rgb(241,98,45)" fg:x="599" fg:w="1"/><text x="13.8420%" y="623.50"></text></g><g><title>0x101155224 (1 samples, 0.02%)</title><rect x="13.5920%" y="597" width="0.0227%" height="15" fill="rgb(254,28,30)" fg:x="599" fg:w="1"/><text x="13.8420%" y="607.50"></text></g><g><title>0x1010747a8 (13 samples, 0.29%)</title><rect x="13.3424%" y="629" width="0.2950%" height="15" fill="rgb(241,142,54)" fg:x="588" fg:w="13"/><text x="13.5924%" y="639.50"></text></g><g><title>0x101239b98 (1 samples, 0.02%)</title><rect x="13.6147%" y="613" width="0.0227%" height="15" fill="rgb(222,85,15)" fg:x="600" fg:w="1"/><text x="13.8647%" y="623.50"></text></g><g><title>0x10123edd8 (1 samples, 0.02%)</title><rect x="13.6147%" y="597" width="0.0227%" height="15" fill="rgb(210,85,47)" fg:x="600" fg:w="1"/><text x="13.8647%" y="607.50"></text></g><g><title>0x10121793c (1 samples, 0.02%)</title><rect x="13.6374%" y="629" width="0.0227%" height="15" fill="rgb(224,206,25)" fg:x="601" fg:w="1"/><text x="13.8874%" y="639.50"></text></g><g><title>0x101206880 (1 samples, 0.02%)</title><rect x="13.6374%" y="613" width="0.0227%" height="15" fill="rgb(243,201,19)" fg:x="601" fg:w="1"/><text x="13.8874%" y="623.50"></text></g><g><title>0x101213ae0 (1 samples, 0.02%)</title><rect x="13.6374%" y="597" width="0.0227%" height="15" fill="rgb(236,59,4)" fg:x="601" fg:w="1"/><text x="13.8874%" y="607.50"></text></g><g><title>0x101213bc8 (1 samples, 0.02%)</title><rect x="13.6374%" y="581" width="0.0227%" height="15" fill="rgb(254,179,45)" fg:x="601" fg:w="1"/><text x="13.8874%" y="591.50"></text></g><g><title>0x10124d0d4 (1 samples, 0.02%)</title><rect x="13.6374%" y="565" width="0.0227%" height="15" fill="rgb(226,14,10)" fg:x="601" fg:w="1"/><text x="13.8874%" y="575.50"></text></g><g><title>0x1010ea3f0 (1 samples, 0.02%)</title><rect x="13.6374%" y="549" width="0.0227%" height="15" fill="rgb(244,27,41)" fg:x="601" fg:w="1"/><text x="13.8874%" y="559.50"></text></g><g><title>0x101217c18 (1 samples, 0.02%)</title><rect x="13.6601%" y="629" width="0.0227%" height="15" fill="rgb(235,35,32)" fg:x="602" fg:w="1"/><text x="13.9101%" y="639.50"></text></g><g><title>0x101218418 (1 samples, 0.02%)</title><rect x="13.6828%" y="629" width="0.0227%" height="15" fill="rgb(218,68,31)" fg:x="603" fg:w="1"/><text x="13.9328%" y="639.50"></text></g><g><title>0x1012186f4 (1 samples, 0.02%)</title><rect x="13.6828%" y="613" width="0.0227%" height="15" fill="rgb(207,120,37)" fg:x="603" fg:w="1"/><text x="13.9328%" y="623.50"></text></g><g><title>kevent (1 samples, 0.02%)</title><rect x="13.6828%" y="597" width="0.0227%" height="15" fill="rgb(227,98,0)" fg:x="603" fg:w="1"/><text x="13.9328%" y="607.50"></text></g><g><title>0x1010856f0 (3 samples, 0.07%)</title><rect x="13.7282%" y="581" width="0.0681%" height="15" fill="rgb(207,7,3)" fg:x="605" fg:w="3"/><text x="13.9782%" y="591.50"></text></g><g><title>0x1010e9dbc (2 samples, 0.05%)</title><rect x="13.7509%" y="565" width="0.0454%" height="15" fill="rgb(206,98,19)" fg:x="606" fg:w="2"/><text x="14.0009%" y="575.50"></text></g><g><title>0x1010856f0 (2 samples, 0.05%)</title><rect x="13.7509%" y="549" width="0.0454%" height="15" fill="rgb(217,5,26)" fg:x="606" fg:w="2"/><text x="14.0009%" y="559.50"></text></g><g><title>0x1010e8f08 (1 samples, 0.02%)</title><rect x="13.7735%" y="533" width="0.0227%" height="15" fill="rgb(235,190,38)" fg:x="607" fg:w="1"/><text x="14.0235%" y="543.50"></text></g><g><title>0x1010e9460 (1 samples, 0.02%)</title><rect x="13.7735%" y="517" width="0.0227%" height="15" fill="rgb(247,86,24)" fg:x="607" fg:w="1"/><text x="14.0235%" y="527.50"></text></g><g><title>0x10121a56c (2 samples, 0.05%)</title><rect x="13.7962%" y="581" width="0.0454%" height="15" fill="rgb(205,101,16)" fg:x="608" fg:w="2"/><text x="14.0462%" y="591.50"></text></g><g><title>0x10121b824 (2 samples, 0.05%)</title><rect x="13.7962%" y="565" width="0.0454%" height="15" fill="rgb(246,168,33)" fg:x="608" fg:w="2"/><text x="14.0462%" y="575.50"></text></g><g><title>_dispatch_semaphore_signal_slow (2 samples, 0.05%)</title><rect x="13.7962%" y="549" width="0.0454%" height="15" fill="rgb(231,114,1)" fg:x="608" fg:w="2"/><text x="14.0462%" y="559.50"></text></g><g><title>semaphore_signal_trap (2 samples, 0.05%)</title><rect x="13.7962%" y="533" width="0.0454%" height="15" fill="rgb(207,184,53)" fg:x="608" fg:w="2"/><text x="14.0462%" y="543.50"></text></g><g><title>0x10100d6bc (8 samples, 0.18%)</title><rect x="13.7055%" y="597" width="0.1815%" height="15" fill="rgb(224,95,51)" fg:x="604" fg:w="8"/><text x="13.9555%" y="607.50"></text></g><g><title>0x10123174c (2 samples, 0.05%)</title><rect x="13.8416%" y="581" width="0.0454%" height="15" fill="rgb(212,188,45)" fg:x="610" fg:w="2"/><text x="14.0916%" y="591.50"></text></g><g><title>0x1010856f0 (2 samples, 0.05%)</title><rect x="13.8416%" y="565" width="0.0454%" height="15" fill="rgb(223,154,38)" fg:x="610" fg:w="2"/><text x="14.0916%" y="575.50"></text></g><g><title>0x10123150c (2 samples, 0.05%)</title><rect x="13.8416%" y="549" width="0.0454%" height="15" fill="rgb(251,22,52)" fg:x="610" fg:w="2"/><text x="14.0916%" y="559.50"></text></g><g><title>0x1010856f0 (1 samples, 0.02%)</title><rect x="13.8643%" y="533" width="0.0227%" height="15" fill="rgb(229,209,22)" fg:x="611" fg:w="1"/><text x="14.1143%" y="543.50"></text></g><g><title>0x10121b668 (1 samples, 0.02%)</title><rect x="13.9097%" y="565" width="0.0227%" height="15" fill="rgb(234,138,34)" fg:x="613" fg:w="1"/><text x="14.1597%" y="575.50"></text></g><g><title>0x10121a56c (2 samples, 0.05%)</title><rect x="13.9097%" y="581" width="0.0454%" height="15" fill="rgb(212,95,11)" fg:x="613" fg:w="2"/><text x="14.1597%" y="591.50"></text></g><g><title>0x10121b824 (1 samples, 0.02%)</title><rect x="13.9324%" y="565" width="0.0227%" height="15" fill="rgb(240,179,47)" fg:x="614" fg:w="1"/><text x="14.1824%" y="575.50"></text></g><g><title>_dispatch_semaphore_signal_slow (1 samples, 0.02%)</title><rect x="13.9324%" y="549" width="0.0227%" height="15" fill="rgb(240,163,11)" fg:x="614" fg:w="1"/><text x="14.1824%" y="559.50"></text></g><g><title>semaphore_signal_trap (1 samples, 0.02%)</title><rect x="13.9324%" y="533" width="0.0227%" height="15" fill="rgb(236,37,12)" fg:x="614" fg:w="1"/><text x="14.1824%" y="543.50"></text></g><g><title>0x1012243a0 (12 samples, 0.27%)</title><rect x="13.7055%" y="629" width="0.2723%" height="15" fill="rgb(232,164,16)" fg:x="604" fg:w="12"/><text x="13.9555%" y="639.50"></text></g><g><title>0x100ffa084 (12 samples, 0.27%)</title><rect x="13.7055%" y="613" width="0.2723%" height="15" fill="rgb(244,205,15)" fg:x="604" fg:w="12"/><text x="13.9555%" y="623.50"></text></g><g><title>0x10100ede4 (4 samples, 0.09%)</title><rect x="13.8870%" y="597" width="0.0908%" height="15" fill="rgb(223,117,47)" fg:x="612" fg:w="4"/><text x="14.1370%" y="607.50"></text></g><g><title>0x1012305e4 (1 samples, 0.02%)</title><rect x="13.9551%" y="581" width="0.0227%" height="15" fill="rgb(244,107,35)" fg:x="615" fg:w="1"/><text x="14.2051%" y="591.50"></text></g><g><title>getentropy (1 samples, 0.02%)</title><rect x="13.9778%" y="629" width="0.0227%" height="15" fill="rgb(205,140,8)" fg:x="616" fg:w="1"/><text x="14.2278%" y="639.50"></text></g><g><title>0x101026148 (34 samples, 0.77%)</title><rect x="13.2516%" y="661" width="0.7715%" height="15" fill="rgb(228,84,46)" fg:x="584" fg:w="34"/><text x="13.5016%" y="671.50"></text></g><g><title>0x101049994 (33 samples, 0.75%)</title><rect x="13.2743%" y="645" width="0.7488%" height="15" fill="rgb(254,188,9)" fg:x="585" fg:w="33"/><text x="13.5243%" y="655.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="14.0005%" y="629" width="0.0227%" height="15" fill="rgb(206,112,54)" fg:x="617" fg:w="1"/><text x="14.2505%" y="639.50"></text></g><g><title>small_malloc_should_clear (1 samples, 0.02%)</title><rect x="14.0005%" y="613" width="0.0227%" height="15" fill="rgb(216,84,49)" fg:x="617" fg:w="1"/><text x="14.2505%" y="623.50"></text></g><g><title>small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="14.0005%" y="597" width="0.0227%" height="15" fill="rgb(214,194,35)" fg:x="617" fg:w="1"/><text x="14.2505%" y="607.50"></text></g><g><title>0x1010007b0 (1 samples, 0.02%)</title><rect x="15.5661%" y="613" width="0.0227%" height="15" fill="rgb(249,28,3)" fg:x="686" fg:w="1"/><text x="15.8161%" y="623.50"></text></g><g><title>0x10107b688 (1 samples, 0.02%)</title><rect x="15.5661%" y="597" width="0.0227%" height="15" fill="rgb(222,56,52)" fg:x="686" fg:w="1"/><text x="15.8161%" y="607.50"></text></g><g><title>0x10124873c (1 samples, 0.02%)</title><rect x="15.5661%" y="581" width="0.0227%" height="15" fill="rgb(245,217,50)" fg:x="686" fg:w="1"/><text x="15.8161%" y="591.50"></text></g><g><title>0x10124a634 (1 samples, 0.02%)</title><rect x="15.5661%" y="565" width="0.0227%" height="15" fill="rgb(213,201,24)" fg:x="686" fg:w="1"/><text x="15.8161%" y="575.50"></text></g><g><title>_realloc (1 samples, 0.02%)</title><rect x="15.5661%" y="549" width="0.0227%" height="15" fill="rgb(248,116,28)" fg:x="686" fg:w="1"/><text x="15.8161%" y="559.50"></text></g><g><title>_malloc_zone_realloc (1 samples, 0.02%)</title><rect x="15.5661%" y="533" width="0.0227%" height="15" fill="rgb(219,72,43)" fg:x="686" fg:w="1"/><text x="15.8161%" y="543.50"></text></g><g><title>szone_realloc (1 samples, 0.02%)</title><rect x="15.5661%" y="517" width="0.0227%" height="15" fill="rgb(209,138,14)" fg:x="686" fg:w="1"/><text x="15.8161%" y="527.50"></text></g><g><title>szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="15.5661%" y="501" width="0.0227%" height="15" fill="rgb(222,18,33)" fg:x="686" fg:w="1"/><text x="15.8161%" y="511.50"></text></g><g><title>medium_malloc_should_clear (1 samples, 0.02%)</title><rect x="15.5661%" y="485" width="0.0227%" height="15" fill="rgb(213,199,7)" fg:x="686" fg:w="1"/><text x="15.8161%" y="495.50"></text></g><g><title>mvm_allocate_pages_plat (1 samples, 0.02%)</title><rect x="15.5661%" y="469" width="0.0227%" height="15" fill="rgb(250,110,10)" fg:x="686" fg:w="1"/><text x="15.8161%" y="479.50"></text></g><g><title>_kernelrpc_mach_vm_map_trap (1 samples, 0.02%)</title><rect x="15.5661%" y="453" width="0.0227%" height="15" fill="rgb(248,123,6)" fg:x="686" fg:w="1"/><text x="15.8161%" y="463.50"></text></g><g><title>SSLRecordReadInternal (1 samples, 0.02%)</title><rect x="15.5888%" y="549" width="0.0227%" height="15" fill="rgb(206,91,31)" fg:x="687" fg:w="1"/><text x="15.8388%" y="559.50"></text></g><g><title>0x10100c224 (1 samples, 0.02%)</title><rect x="15.5888%" y="533" width="0.0227%" height="15" fill="rgb(211,154,13)" fg:x="687" fg:w="1"/><text x="15.8388%" y="543.50"></text></g><g><title>__recvfrom (1 samples, 0.02%)</title><rect x="15.5888%" y="517" width="0.0227%" height="15" fill="rgb(225,148,7)" fg:x="687" fg:w="1"/><text x="15.8388%" y="527.50"></text></g><g><title>tls_handshake_continue (1 samples, 0.02%)</title><rect x="15.6115%" y="549" width="0.0227%" height="15" fill="rgb(220,160,43)" fg:x="688" fg:w="1"/><text x="15.8615%" y="559.50"></text></g><g><title>SSLAdvanceHandshake (1 samples, 0.02%)</title><rect x="15.6115%" y="533" width="0.0227%" height="15" fill="rgb(213,52,39)" fg:x="688" fg:w="1"/><text x="15.8615%" y="543.50"></text></g><g><title>SSLPrepareAndQueueMessage (1 samples, 0.02%)</title><rect x="15.6115%" y="517" width="0.0227%" height="15" fill="rgb(243,137,7)" fg:x="688" fg:w="1"/><text x="15.8615%" y="527.50"></text></g><g><title>SSLEncodeKeyExchange (1 samples, 0.02%)</title><rect x="15.6115%" y="501" width="0.0227%" height="15" fill="rgb(230,79,13)" fg:x="688" fg:w="1"/><text x="15.8615%" y="511.50"></text></g><g><title>ccecdh_compute_shared_secret (1 samples, 0.02%)</title><rect x="15.6115%" y="485" width="0.0227%" height="15" fill="rgb(247,105,23)" fg:x="688" fg:w="1"/><text x="15.8615%" y="495.50"></text></g><g><title>ccecdh_compute_shared_secret_ws (1 samples, 0.02%)</title><rect x="15.6115%" y="469" width="0.0227%" height="15" fill="rgb(223,179,41)" fg:x="688" fg:w="1"/><text x="15.8615%" y="479.50"></text></g><g><title>ccec_mult_blinded_ws (1 samples, 0.02%)</title><rect x="15.6115%" y="453" width="0.0227%" height="15" fill="rgb(218,9,34)" fg:x="688" fg:w="1"/><text x="15.8615%" y="463.50"></text></g><g><title>ccec_mult_default_ws (1 samples, 0.02%)</title><rect x="15.6115%" y="437" width="0.0227%" height="15" fill="rgb(222,106,8)" fg:x="688" fg:w="1"/><text x="15.8615%" y="447.50"></text></g><g><title>ccec_mult_XYCZadd_ws (1 samples, 0.02%)</title><rect x="15.6115%" y="421" width="0.0227%" height="15" fill="rgb(211,220,0)" fg:x="688" fg:w="1"/><text x="15.8615%" y="431.50"></text></g><g><title>ccn_sub_asm (1 samples, 0.02%)</title><rect x="15.6115%" y="405" width="0.0227%" height="15" fill="rgb(229,52,16)" fg:x="688" fg:w="1"/><text x="15.8615%" y="415.50"></text></g><g><title>SSLHandshake (3 samples, 0.07%)</title><rect x="15.5888%" y="581" width="0.0681%" height="15" fill="rgb(212,155,18)" fg:x="687" fg:w="3"/><text x="15.8388%" y="591.50"></text></g><g><title>SSLHandshakeProceed (3 samples, 0.07%)</title><rect x="15.5888%" y="565" width="0.0681%" height="15" fill="rgb(242,21,14)" fg:x="687" fg:w="3"/><text x="15.8388%" y="575.50"></text></g><g><title>tls_handshake_process (1 samples, 0.02%)</title><rect x="15.6342%" y="549" width="0.0227%" height="15" fill="rgb(222,19,48)" fg:x="689" fg:w="1"/><text x="15.8842%" y="559.50"></text></g><g><title>SSLProcessHandshakeRecordInner (1 samples, 0.02%)</title><rect x="15.6342%" y="533" width="0.0227%" height="15" fill="rgb(232,45,27)" fg:x="689" fg:w="1"/><text x="15.8842%" y="543.50"></text></g><g><title>tls_verify_peer_cert (1 samples, 0.02%)</title><rect x="15.6342%" y="517" width="0.0227%" height="15" fill="rgb(249,103,42)" fg:x="689" fg:w="1"/><text x="15.8842%" y="527.50"></text></g><g><title>sslCreateSecTrust (1 samples, 0.02%)</title><rect x="15.6342%" y="501" width="0.0227%" height="15" fill="rgb(246,81,33)" fg:x="689" fg:w="1"/><text x="15.8842%" y="511.50"></text></g><g><title>tls_helper_create_peer_trust (1 samples, 0.02%)</title><rect x="15.6342%" y="485" width="0.0227%" height="15" fill="rgb(252,33,42)" fg:x="689" fg:w="1"/><text x="15.8842%" y="495.50"></text></g><g><title>SecPolicyCreateSSL_internal (1 samples, 0.02%)</title><rect x="15.6342%" y="469" width="0.0227%" height="15" fill="rgb(209,212,41)" fg:x="689" fg:w="1"/><text x="15.8842%" y="479.50"></text></g><g><title>-[__NSArrayM insertObject:atIndex:] (1 samples, 0.02%)</title><rect x="15.6342%" y="453" width="0.0227%" height="15" fill="rgb(207,154,6)" fg:x="689" fg:w="1"/><text x="15.8842%" y="463.50"></text></g><g><title>0x101008be0 (5 samples, 0.11%)</title><rect x="15.5661%" y="629" width="0.1135%" height="15" fill="rgb(223,64,47)" fg:x="686" fg:w="5"/><text x="15.8161%" y="639.50"></text></g><g><title>0x101007bdc (4 samples, 0.09%)</title><rect x="15.5888%" y="613" width="0.0908%" height="15" fill="rgb(211,161,38)" fg:x="687" fg:w="4"/><text x="15.8388%" y="623.50"></text></g><g><title>0x10100bc28 (4 samples, 0.09%)</title><rect x="15.5888%" y="597" width="0.0908%" height="15" fill="rgb(219,138,40)" fg:x="687" fg:w="4"/><text x="15.8388%" y="607.50"></text></g><g><title>SecTrustEvaluateInternal (1 samples, 0.02%)</title><rect x="15.6569%" y="581" width="0.0227%" height="15" fill="rgb(241,228,46)" fg:x="690" fg:w="1"/><text x="15.9069%" y="591.50"></text></g><g><title>SecTrustEvaluateIfNecessary (1 samples, 0.02%)</title><rect x="15.6569%" y="565" width="0.0227%" height="15" fill="rgb(223,209,38)" fg:x="690" fg:w="1"/><text x="15.9069%" y="575.50"></text></g><g><title>_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 0.02%)</title><rect x="15.6569%" y="549" width="0.0227%" height="15" fill="rgb(236,164,45)" fg:x="690" fg:w="1"/><text x="15.9069%" y="559.50"></text></g><g><title>_dispatch_client_callout (1 samples, 0.02%)</title><rect x="15.6569%" y="533" width="0.0227%" height="15" fill="rgb(231,15,5)" fg:x="690" fg:w="1"/><text x="15.9069%" y="543.50"></text></g><g><title>__SecTrustEvaluateIfNecessary_block_invoke (1 samples, 0.02%)</title><rect x="15.6569%" y="517" width="0.0227%" height="15" fill="rgb(252,35,15)" fg:x="690" fg:w="1"/><text x="15.9069%" y="527.50"></text></g><g><title>_os_activity_initiate_impl (1 samples, 0.02%)</title><rect x="15.6569%" y="501" width="0.0227%" height="15" fill="rgb(248,181,18)" fg:x="690" fg:w="1"/><text x="15.9069%" y="511.50"></text></g><g><title>__SecTrustEvaluateIfNecessary_block_invoke_2 (1 samples, 0.02%)</title><rect x="15.6569%" y="485" width="0.0227%" height="15" fill="rgb(233,39,42)" fg:x="690" fg:w="1"/><text x="15.9069%" y="495.50"></text></g><g><title>SecOSStatusWith (1 samples, 0.02%)</title><rect x="15.6569%" y="469" width="0.0227%" height="15" fill="rgb(238,110,33)" fg:x="690" fg:w="1"/><text x="15.9069%" y="479.50"></text></g><g><title>__SecTrustEvaluateIfNecessary_block_invoke_3 (1 samples, 0.02%)</title><rect x="15.6569%" y="453" width="0.0227%" height="15" fill="rgb(233,195,10)" fg:x="690" fg:w="1"/><text x="15.9069%" y="463.50"></text></g><g><title>securityd_send_sync_and_do (1 samples, 0.02%)</title><rect x="15.6569%" y="437" width="0.0227%" height="15" fill="rgb(254,105,3)" fg:x="690" fg:w="1"/><text x="15.9069%" y="447.50"></text></g><g><title>security_fw_send_message_with_reply_sync_inner (1 samples, 0.02%)</title><rect x="15.6569%" y="421" width="0.0227%" height="15" fill="rgb(221,225,9)" fg:x="690" fg:w="1"/><text x="15.9069%" y="431.50"></text></g><g><title>xpc_connection_send_message_with_reply_sync (1 samples, 0.02%)</title><rect x="15.6569%" y="405" width="0.0227%" height="15" fill="rgb(224,227,45)" fg:x="690" fg:w="1"/><text x="15.9069%" y="415.50"></text></g><g><title>-[OS_xpc_object dealloc] (1 samples, 0.02%)</title><rect x="15.6569%" y="389" width="0.0227%" height="15" fill="rgb(229,198,43)" fg:x="690" fg:w="1"/><text x="15.9069%" y="399.50"></text></g><g><title>_xpc_serializer_dispose (1 samples, 0.02%)</title><rect x="15.6569%" y="373" width="0.0227%" height="15" fill="rgb(206,209,35)" fg:x="690" fg:w="1"/><text x="15.9069%" y="383.50"></text></g><g><title>dispatch_release (1 samples, 0.02%)</title><rect x="15.6569%" y="357" width="0.0227%" height="15" fill="rgb(245,195,53)" fg:x="690" fg:w="1"/><text x="15.9069%" y="367.50"></text></g><g><title>_dispatch_dispose (1 samples, 0.02%)</title><rect x="15.6569%" y="341" width="0.0227%" height="15" fill="rgb(240,92,26)" fg:x="690" fg:w="1"/><text x="15.9069%" y="351.50"></text></g><g><title>_szone_free (1 samples, 0.02%)</title><rect x="15.6569%" y="325" width="0.0227%" height="15" fill="rgb(207,40,23)" fg:x="690" fg:w="1"/><text x="15.9069%" y="335.50"></text></g><g><title>0x10102fc78 (4 samples, 0.09%)</title><rect x="16.4057%" y="613" width="0.0908%" height="15" fill="rgb(223,111,35)" fg:x="723" fg:w="4"/><text x="16.6557%" y="623.50"></text></g><g><title>0x101038fc0 (41 samples, 0.93%)</title><rect x="15.6796%" y="629" width="0.9303%" height="15" fill="rgb(229,147,28)" fg:x="691" fg:w="41"/><text x="15.9296%" y="639.50"></text></g><g><title>_platform_memcmp (5 samples, 0.11%)</title><rect x="16.4965%" y="613" width="0.1135%" height="15" fill="rgb(211,29,28)" fg:x="727" fg:w="5"/><text x="16.7465%" y="623.50"></text></g><g><title>0x100fffee4 (1 samples, 0.02%)</title><rect x="16.6099%" y="613" width="0.0227%" height="15" fill="rgb(228,72,33)" fg:x="732" fg:w="1"/><text x="16.8599%" y="623.50"></text></g><g><title>0x100fff4e4 (1 samples, 0.02%)</title><rect x="16.6099%" y="597" width="0.0227%" height="15" fill="rgb(205,214,31)" fg:x="732" fg:w="1"/><text x="16.8599%" y="607.50"></text></g><g><title>getentropy (1 samples, 0.02%)</title><rect x="16.6099%" y="581" width="0.0227%" height="15" fill="rgb(224,111,15)" fg:x="732" fg:w="1"/><text x="16.8599%" y="591.50"></text></g><g><title>SSLRecordServiceWriteQueueInternal (1 samples, 0.02%)</title><rect x="16.6326%" y="581" width="0.0227%" height="15" fill="rgb(253,21,26)" fg:x="733" fg:w="1"/><text x="16.8826%" y="591.50"></text></g><g><title>0x10100bb10 (1 samples, 0.02%)</title><rect x="16.6326%" y="565" width="0.0227%" height="15" fill="rgb(245,139,43)" fg:x="733" fg:w="1"/><text x="16.8826%" y="575.50"></text></g><g><title>0x10120c700 (1 samples, 0.02%)</title><rect x="16.6326%" y="549" width="0.0227%" height="15" fill="rgb(252,170,7)" fg:x="733" fg:w="1"/><text x="16.8826%" y="559.50"></text></g><g><title>__sendto (1 samples, 0.02%)</title><rect x="16.6326%" y="533" width="0.0227%" height="15" fill="rgb(231,118,14)" fg:x="733" fg:w="1"/><text x="16.8826%" y="543.50"></text></g><g><title>0x10103ec24 (3 samples, 0.07%)</title><rect x="16.6099%" y="629" width="0.0681%" height="15" fill="rgb(238,83,0)" fg:x="732" fg:w="3"/><text x="16.8599%" y="639.50"></text></g><g><title>0x101031368 (2 samples, 0.05%)</title><rect x="16.6326%" y="613" width="0.0454%" height="15" fill="rgb(221,39,39)" fg:x="733" fg:w="2"/><text x="16.8826%" y="623.50"></text></g><g><title>SSLWrite (2 samples, 0.05%)</title><rect x="16.6326%" y="597" width="0.0454%" height="15" fill="rgb(222,119,46)" fg:x="733" fg:w="2"/><text x="16.8826%" y="607.50"></text></g><g><title>SSLRecordWriteInternal (1 samples, 0.02%)</title><rect x="16.6553%" y="581" width="0.0227%" height="15" fill="rgb(222,165,49)" fg:x="734" fg:w="1"/><text x="16.9053%" y="591.50"></text></g><g><title>tls_record_encrypt (1 samples, 0.02%)</title><rect x="16.6553%" y="565" width="0.0227%" height="15" fill="rgb(219,113,52)" fg:x="734" fg:w="1"/><text x="16.9053%" y="575.50"></text></g><g><title>ccmode_gcm_init (1 samples, 0.02%)</title><rect x="16.6553%" y="549" width="0.0227%" height="15" fill="rgb(214,7,15)" fg:x="734" fg:w="1"/><text x="16.9053%" y="559.50"></text></g><g><title>0x101018ac4 (7 samples, 0.16%)</title><rect x="16.7688%" y="613" width="0.1588%" height="15" fill="rgb(235,32,4)" fg:x="739" fg:w="7"/><text x="17.0188%" y="623.50"></text></g><g><title>0x101252468 (4 samples, 0.09%)</title><rect x="17.2907%" y="581" width="0.0908%" height="15" fill="rgb(238,90,54)" fg:x="762" fg:w="4"/><text x="17.5407%" y="591.50"></text></g><g><title>0x1012524ec (1 samples, 0.02%)</title><rect x="17.3587%" y="565" width="0.0227%" height="15" fill="rgb(213,208,19)" fg:x="765" fg:w="1"/><text x="17.6087%" y="575.50"></text></g><g><title>SSLGetConnection (1 samples, 0.02%)</title><rect x="17.3587%" y="549" width="0.0227%" height="15" fill="rgb(233,156,4)" fg:x="765" fg:w="1"/><text x="17.6087%" y="559.50"></text></g><g><title>DYLD-STUB$$tls_handshake_continue (1 samples, 0.02%)</title><rect x="17.3814%" y="581" width="0.0227%" height="15" fill="rgb(207,194,5)" fg:x="766" fg:w="1"/><text x="17.6314%" y="591.50"></text></g><g><title>SSLGetBufferedReadSize (5 samples, 0.11%)</title><rect x="17.4041%" y="581" width="0.1135%" height="15" fill="rgb(206,111,30)" fg:x="767" fg:w="5"/><text x="17.6541%" y="591.50"></text></g><g><title>DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="17.8580%" y="565" width="0.0227%" height="15" fill="rgb(243,70,54)" fg:x="787" fg:w="1"/><text x="18.1080%" y="575.50"></text></g><g><title>DYLD-STUB$$tls_handshake_continue (1 samples, 0.02%)</title><rect x="17.8806%" y="565" width="0.0227%" height="15" fill="rgb(242,28,8)" fg:x="788" fg:w="1"/><text x="18.1306%" y="575.50"></text></g><g><title>DYLD-STUB$$_platform_memset (1 samples, 0.02%)</title><rect x="17.9260%" y="549" width="0.0227%" height="15" fill="rgb(219,106,18)" fg:x="790" fg:w="1"/><text x="18.1760%" y="559.50"></text></g><g><title>DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="17.9487%" y="549" width="0.0227%" height="15" fill="rgb(244,222,10)" fg:x="791" fg:w="1"/><text x="18.1987%" y="559.50"></text></g><g><title>_free (2 samples, 0.05%)</title><rect x="17.9714%" y="549" width="0.0454%" height="15" fill="rgb(236,179,52)" fg:x="792" fg:w="2"/><text x="18.2214%" y="559.50"></text></g><g><title>_szone_free (6 samples, 0.14%)</title><rect x="18.0168%" y="549" width="0.1361%" height="15" fill="rgb(213,23,39)" fg:x="794" fg:w="6"/><text x="18.2668%" y="559.50"></text></g><g><title>free (1 samples, 0.02%)</title><rect x="18.1529%" y="549" width="0.0227%" height="15" fill="rgb(238,48,10)" fg:x="800" fg:w="1"/><text x="18.4029%" y="559.50"></text></g><g><title>DYLD-STUB$$_platform_memset (1 samples, 0.02%)</title><rect x="18.2664%" y="533" width="0.0227%" height="15" fill="rgb(251,196,23)" fg:x="805" fg:w="1"/><text x="18.5164%" y="543.50"></text></g><g><title>_platform_memset (1 samples, 0.02%)</title><rect x="18.2891%" y="533" width="0.0227%" height="15" fill="rgb(250,152,24)" fg:x="806" fg:w="1"/><text x="18.5391%" y="543.50"></text></g><g><title>get_tiny_previous_free_msize (2 samples, 0.05%)</title><rect x="18.4252%" y="517" width="0.0454%" height="15" fill="rgb(209,150,17)" fg:x="812" fg:w="2"/><text x="18.6752%" y="527.50"></text></g><g><title>free_tiny (17 samples, 0.39%)</title><rect x="18.1756%" y="549" width="0.3857%" height="15" fill="rgb(234,202,34)" fg:x="801" fg:w="17"/><text x="18.4256%" y="559.50"></text></g><g><title>tiny_free_no_lock (11 samples, 0.25%)</title><rect x="18.3118%" y="533" width="0.2496%" height="15" fill="rgb(253,148,53)" fg:x="807" fg:w="11"/><text x="18.5618%" y="543.50"></text></g><g><title>tiny_free_list_add_ptr (4 samples, 0.09%)</title><rect x="18.4706%" y="517" width="0.0908%" height="15" fill="rgb(218,129,16)" fg:x="814" fg:w="4"/><text x="18.7206%" y="527.50"></text></g><g><title>SSLRecordFreeInternal (30 samples, 0.68%)</title><rect x="17.9033%" y="565" width="0.6807%" height="15" fill="rgb(216,85,19)" fg:x="789" fg:w="30"/><text x="18.1533%" y="575.50"></text></g><g><title>tiny_free_no_lock (1 samples, 0.02%)</title><rect x="18.5614%" y="549" width="0.0227%" height="15" fill="rgb(235,228,7)" fg:x="818" fg:w="1"/><text x="18.8114%" y="559.50"></text></g><g><title>0x10120a370 (5 samples, 0.11%)</title><rect x="19.0152%" y="517" width="0.1135%" height="15" fill="rgb(245,175,0)" fg:x="838" fg:w="5"/><text x="19.2652%" y="527.50"></text></g><g><title>0x101002e50 (4 samples, 0.09%)</title><rect x="19.3556%" y="501" width="0.0908%" height="15" fill="rgb(208,168,36)" fg:x="853" fg:w="4"/><text x="19.6056%" y="511.50"></text></g><g><title>0x10120bccc (15 samples, 0.34%)</title><rect x="19.1287%" y="517" width="0.3404%" height="15" fill="rgb(246,171,24)" fg:x="843" fg:w="15"/><text x="19.3787%" y="527.50"></text></g><g><title>_tlv_get_addr (1 samples, 0.02%)</title><rect x="19.4463%" y="501" width="0.0227%" height="15" fill="rgb(215,142,24)" fg:x="857" fg:w="1"/><text x="19.6963%" y="511.50"></text></g><g><title>DYLD-STUB$$__recvfrom (4 samples, 0.09%)</title><rect x="19.4690%" y="517" width="0.0908%" height="15" fill="rgb(250,187,7)" fg:x="858" fg:w="4"/><text x="19.7190%" y="527.50"></text></g><g><title>DYLD-STUB$$recv (1 samples, 0.02%)</title><rect x="19.5598%" y="517" width="0.0227%" height="15" fill="rgb(228,66,33)" fg:x="862" fg:w="1"/><text x="19.8098%" y="527.50"></text></g><g><title>_pthread_exit_if_canceled (8 samples, 0.18%)</title><rect x="54.4588%" y="501" width="0.1815%" height="15" fill="rgb(234,215,21)" fg:x="2400" fg:w="8"/><text x="54.7088%" y="511.50"></text></g><g><title>__recvfrom (1,551 samples, 35.19%)</title><rect x="19.5825%" y="517" width="35.1940%" height="15" fill="rgb(222,191,20)" fg:x="863" fg:w="1551"/><text x="19.8325%" y="527.50">__recvfrom</text></g><g><title>cerror (6 samples, 0.14%)</title><rect x="54.6403%" y="501" width="0.1361%" height="15" fill="rgb(245,79,54)" fg:x="2408" fg:w="6"/><text x="54.8903%" y="511.50"></text></g><g><title>_pthread_exit_if_canceled (5 samples, 0.11%)</title><rect x="54.6630%" y="485" width="0.1135%" height="15" fill="rgb(240,10,37)" fg:x="2409" fg:w="5"/><text x="54.9130%" y="495.50"></text></g><g><title>_tlv_get_addr (1 samples, 0.02%)</title><rect x="54.7765%" y="517" width="0.0227%" height="15" fill="rgb(214,192,32)" fg:x="2414" fg:w="1"/><text x="55.0265%" y="527.50"></text></g><g><title>0x10120c498 (1,591 samples, 36.10%)</title><rect x="18.8110%" y="533" width="36.1017%" height="15" fill="rgb(209,36,54)" fg:x="829" fg:w="1591"/><text x="19.0610%" y="543.50">0x10120c498</text></g><g><title>recv (5 samples, 0.11%)</title><rect x="54.7992%" y="517" width="0.1135%" height="15" fill="rgb(220,10,11)" fg:x="2415" fg:w="5"/><text x="55.0492%" y="527.50"></text></g><g><title>0x101252800 (1 samples, 0.02%)</title><rect x="54.9126%" y="533" width="0.0227%" height="15" fill="rgb(221,106,17)" fg:x="2420" fg:w="1"/><text x="55.1626%" y="543.50"></text></g><g><title>DYLD-STUB$$__recvfrom (2 samples, 0.05%)</title><rect x="54.9353%" y="533" width="0.0454%" height="15" fill="rgb(251,142,44)" fg:x="2421" fg:w="2"/><text x="55.1853%" y="543.50"></text></g><g><title>__error (1 samples, 0.02%)</title><rect x="54.9807%" y="533" width="0.0227%" height="15" fill="rgb(238,13,15)" fg:x="2423" fg:w="1"/><text x="55.2307%" y="543.50"></text></g><g><title>__recvfrom (756 samples, 17.15%)</title><rect x="55.0034%" y="533" width="17.1545%" height="15" fill="rgb(208,107,27)" fg:x="2424" fg:w="756"/><text x="55.2534%" y="543.50">__recvfrom</text></g><g><title>0x10100c224 (2,356 samples, 53.46%)</title><rect x="18.7202%" y="549" width="53.4604%" height="15" fill="rgb(205,136,37)" fg:x="825" fg:w="2356"/><text x="18.9702%" y="559.50">0x10100c224</text></g><g><title>recv (1 samples, 0.02%)</title><rect x="72.1579%" y="533" width="0.0227%" height="15" fill="rgb(250,205,27)" fg:x="3180" fg:w="1"/><text x="72.4079%" y="543.50"></text></g><g><title>CCSymmAEADSetIV (4 samples, 0.09%)</title><rect x="72.1806%" y="549" width="0.0908%" height="15" fill="rgb(210,80,43)" fg:x="3181" fg:w="4"/><text x="72.4306%" y="559.50"></text></g><g><title>DYLD-STUB$$ccgcm_gmac (1 samples, 0.02%)</title><rect x="72.2714%" y="549" width="0.0227%" height="15" fill="rgb(247,160,36)" fg:x="3185" fg:w="1"/><text x="72.5214%" y="559.50"></text></g><g><title>DYLD-STUB$$memcpy (1 samples, 0.02%)</title><rect x="72.2941%" y="549" width="0.0227%" height="15" fill="rgb(234,13,49)" fg:x="3186" fg:w="1"/><text x="72.5441%" y="559.50"></text></g><g><title>DYLD-STUB$$tls_record_decrypt (1 samples, 0.02%)</title><rect x="72.3168%" y="549" width="0.0227%" height="15" fill="rgb(234,122,0)" fg:x="3187" fg:w="1"/><text x="72.5668%" y="559.50"></text></g><g><title>DYLD-STUB$$tls_record_get_header_size (1 samples, 0.02%)</title><rect x="72.3395%" y="549" width="0.0227%" height="15" fill="rgb(207,146,38)" fg:x="3188" fg:w="1"/><text x="72.5895%" y="559.50"></text></g><g><title>SSLEncodeUInt64 (1 samples, 0.02%)</title><rect x="72.3622%" y="549" width="0.0227%" height="15" fill="rgb(207,177,25)" fg:x="3189" fg:w="1"/><text x="72.6122%" y="559.50"></text></g><g><title>_platform_memmove (2 samples, 0.05%)</title><rect x="72.3848%" y="549" width="0.0454%" height="15" fill="rgb(211,178,42)" fg:x="3190" fg:w="2"/><text x="72.6348%" y="559.50"></text></g><g><title>ccgcm_init_with_iv (1 samples, 0.02%)</title><rect x="72.4302%" y="549" width="0.0227%" height="15" fill="rgb(230,69,54)" fg:x="3192" fg:w="1"/><text x="72.6802%" y="559.50"></text></g><g><title>malloc_type_malloc (4 samples, 0.09%)</title><rect x="72.4529%" y="549" width="0.0908%" height="15" fill="rgb(214,135,41)" fg:x="3193" fg:w="4"/><text x="72.7029%" y="559.50"></text></g><g><title>rack_get_thread_index (5 samples, 0.11%)</title><rect x="72.6571%" y="533" width="0.1135%" height="15" fill="rgb(237,67,25)" fg:x="3202" fg:w="5"/><text x="72.9071%" y="543.50"></text></g><g><title>_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.02%)</title><rect x="72.8840%" y="517" width="0.0227%" height="15" fill="rgb(222,189,50)" fg:x="3212" fg:w="1"/><text x="73.1340%" y="527.50"></text></g><g><title>_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.05%)</title><rect x="73.2925%" y="501" width="0.0454%" height="15" fill="rgb(245,148,34)" fg:x="3230" fg:w="2"/><text x="73.5425%" y="511.50"></text></g><g><title>szone_malloc_should_clear (37 samples, 0.84%)</title><rect x="72.5437%" y="549" width="0.8396%" height="15" fill="rgb(222,29,6)" fg:x="3197" fg:w="37"/><text x="72.7937%" y="559.50"></text></g><g><title>tiny_malloc_should_clear (27 samples, 0.61%)</title><rect x="72.7706%" y="533" width="0.6127%" height="15" fill="rgb(221,189,43)" fg:x="3207" fg:w="27"/><text x="73.0206%" y="543.50"></text></g><g><title>tiny_malloc_from_free_list (21 samples, 0.48%)</title><rect x="72.9067%" y="517" width="0.4765%" height="15" fill="rgb(207,36,27)" fg:x="3213" fg:w="21"/><text x="73.1567%" y="527.50"></text></g><g><title>tiny_free_list_add_ptr (2 samples, 0.05%)</title><rect x="73.3379%" y="501" width="0.0454%" height="15" fill="rgb(217,90,24)" fg:x="3232" fg:w="2"/><text x="73.5879%" y="511.50"></text></g><g><title>szone_malloc_type_malloc (2 samples, 0.05%)</title><rect x="73.3833%" y="549" width="0.0454%" height="15" fill="rgb(224,66,35)" fg:x="3234" fg:w="2"/><text x="73.6333%" y="559.50"></text></g><g><title>CCSymmAEADDecrypt (3 samples, 0.07%)</title><rect x="73.5648%" y="533" width="0.0681%" height="15" fill="rgb(221,13,50)" fg:x="3242" fg:w="3"/><text x="73.8148%" y="543.50"></text></g><g><title>CCSymmAEADSetIV (10 samples, 0.23%)</title><rect x="73.6329%" y="533" width="0.2269%" height="15" fill="rgb(236,68,49)" fg:x="3245" fg:w="10"/><text x="73.8829%" y="543.50"></text></g><g><title>DYLD-STUB$$ccgcm_gmac (2 samples, 0.05%)</title><rect x="73.8598%" y="533" width="0.0454%" height="15" fill="rgb(229,146,28)" fg:x="3255" fg:w="2"/><text x="74.1098%" y="543.50"></text></g><g><title>DYLD-STUB$$memcpy (2 samples, 0.05%)</title><rect x="73.9052%" y="533" width="0.0454%" height="15" fill="rgb(225,31,38)" fg:x="3257" fg:w="2"/><text x="74.1552%" y="543.50"></text></g><g><title>IncrementUInt64 (1 samples, 0.02%)</title><rect x="73.9505%" y="533" width="0.0227%" height="15" fill="rgb(250,208,3)" fg:x="3259" fg:w="1"/><text x="74.2005%" y="543.50"></text></g><g><title>AccelerateCrypto_ecb_AES_encrypt (2 samples, 0.05%)</title><rect x="74.2001%" y="485" width="0.0454%" height="15" fill="rgb(246,54,23)" fg:x="3270" fg:w="2"/><text x="74.4501%" y="495.50"></text></g><g><title>cc_cmp_safe_internal (1 samples, 0.02%)</title><rect x="74.2455%" y="485" width="0.0227%" height="15" fill="rgb(243,76,11)" fg:x="3272" fg:w="1"/><text x="74.4955%" y="495.50"></text></g><g><title>_platform_memmove (2 samples, 0.05%)</title><rect x="74.3363%" y="469" width="0.0454%" height="15" fill="rgb(245,21,50)" fg:x="3276" fg:w="2"/><text x="74.5863%" y="479.50"></text></g><g><title>ccmode_gcm_finalize (11 samples, 0.25%)</title><rect x="74.2682%" y="485" width="0.2496%" height="15" fill="rgb(228,9,43)" fg:x="3273" fg:w="11"/><text x="74.5182%" y="495.50"></text></g><g><title>cc_cmp_safe_internal (6 samples, 0.14%)</title><rect x="74.3817%" y="469" width="0.1361%" height="15" fill="rgb(208,100,47)" fg:x="3278" fg:w="6"/><text x="74.6317%" y="479.50"></text></g><g><title>timingsafe_enable_if_supported (2 samples, 0.05%)</title><rect x="74.4724%" y="453" width="0.0454%" height="15" fill="rgb(232,26,8)" fg:x="3282" fg:w="2"/><text x="74.7224%" y="463.50"></text></g><g><title>ccgcm_finalize (15 samples, 0.34%)</title><rect x="74.2001%" y="501" width="0.3404%" height="15" fill="rgb(216,166,38)" fg:x="3270" fg:w="15"/><text x="74.4501%" y="511.50"></text></g><g><title>timingsafe_restore_if_supported (1 samples, 0.02%)</title><rect x="74.5178%" y="485" width="0.0227%" height="15" fill="rgb(251,202,51)" fg:x="3284" fg:w="1"/><text x="74.7678%" y="495.50"></text></g><g><title>ccgcm_inc_iv_internal (2 samples, 0.05%)</title><rect x="74.5405%" y="485" width="0.0454%" height="15" fill="rgb(254,216,34)" fg:x="3285" fg:w="2"/><text x="74.7905%" y="495.50"></text></g><g><title>ccmode_gcm_update_pad (1 samples, 0.02%)</title><rect x="74.5632%" y="469" width="0.0227%" height="15" fill="rgb(251,32,27)" fg:x="3286" fg:w="1"/><text x="74.8132%" y="479.50"></text></g><g><title>timingsafe_enable_if_supported (1 samples, 0.02%)</title><rect x="74.5859%" y="485" width="0.0227%" height="15" fill="rgb(208,127,28)" fg:x="3287" fg:w="1"/><text x="74.8359%" y="495.50"></text></g><g><title>ccgcm_inc_iv (4 samples, 0.09%)</title><rect x="74.5405%" y="501" width="0.0908%" height="15" fill="rgb(224,137,22)" fg:x="3285" fg:w="4"/><text x="74.7905%" y="511.50"></text></g><g><title>timingsafe_restore_if_supported (1 samples, 0.02%)</title><rect x="74.6086%" y="485" width="0.0227%" height="15" fill="rgb(254,70,32)" fg:x="3288" fg:w="1"/><text x="74.8586%" y="495.50"></text></g><g><title>_platform_memset (1 samples, 0.02%)</title><rect x="74.6313%" y="469" width="0.0227%" height="15" fill="rgb(229,75,37)" fg:x="3289" fg:w="1"/><text x="74.8813%" y="479.50"></text></g><g><title>ccmode_gcm_reset (2 samples, 0.05%)</title><rect x="74.6313%" y="485" width="0.0454%" height="15" fill="rgb(252,64,23)" fg:x="3289" fg:w="2"/><text x="74.8813%" y="495.50"></text></g><g><title>memset_s (1 samples, 0.02%)</title><rect x="74.6540%" y="469" width="0.0227%" height="15" fill="rgb(232,162,48)" fg:x="3290" fg:w="1"/><text x="74.9040%" y="479.50"></text></g><g><title>_platform_memset (1 samples, 0.02%)</title><rect x="74.6540%" y="453" width="0.0227%" height="15" fill="rgb(246,160,12)" fg:x="3290" fg:w="1"/><text x="74.9040%" y="463.50"></text></g><g><title>ccgcm_reset (5 samples, 0.11%)</title><rect x="74.6313%" y="501" width="0.1135%" height="15" fill="rgb(247,166,0)" fg:x="3289" fg:w="5"/><text x="74.8813%" y="511.50"></text></g><g><title>timingsafe_enable_if_supported (3 samples, 0.07%)</title><rect x="74.6767%" y="485" width="0.0681%" height="15" fill="rgb(249,219,21)" fg:x="3291" fg:w="3"/><text x="74.9267%" y="495.50"></text></g><g><title>Decrypt_Main_Loop (2 samples, 0.05%)</title><rect x="74.7447%" y="485" width="0.0454%" height="15" fill="rgb(205,209,3)" fg:x="3294" fg:w="2"/><text x="74.9947%" y="495.50"></text></g><g><title>Decrypt_Main_Loop_End (2 samples, 0.05%)</title><rect x="74.7901%" y="485" width="0.0454%" height="15" fill="rgb(243,44,1)" fg:x="3296" fg:w="2"/><text x="75.0401%" y="495.50"></text></g><g><title>Decrypt_Main_Loop (8 samples, 0.18%)</title><rect x="74.9943%" y="469" width="0.1815%" height="15" fill="rgb(206,159,16)" fg:x="3305" fg:w="8"/><text x="75.2443%" y="479.50"></text></g><g><title>Decrypt_Main_Loop_End (6 samples, 0.14%)</title><rect x="75.1759%" y="469" width="0.1361%" height="15" fill="rgb(244,77,30)" fg:x="3313" fg:w="6"/><text x="75.4259%" y="479.50"></text></g><g><title>ccaes_vng_gcm_decrypt (22 samples, 0.50%)</title><rect x="74.8355%" y="485" width="0.4992%" height="15" fill="rgb(218,69,12)" fg:x="3298" fg:w="22"/><text x="75.0855%" y="495.50"></text></g><g><title>gcmDecrypt (1 samples, 0.02%)</title><rect x="75.3120%" y="469" width="0.0227%" height="15" fill="rgb(212,87,7)" fg:x="3319" fg:w="1"/><text x="75.5620%" y="479.50"></text></g><g><title>ccmode_gcm_aad_finalize (1 samples, 0.02%)</title><rect x="75.3347%" y="485" width="0.0227%" height="15" fill="rgb(245,114,25)" fg:x="3320" fg:w="1"/><text x="75.5847%" y="495.50"></text></g><g><title>gcmDecrypt (2 samples, 0.05%)</title><rect x="75.3574%" y="485" width="0.0454%" height="15" fill="rgb(210,61,42)" fg:x="3321" fg:w="2"/><text x="75.6074%" y="495.50"></text></g><g><title>ccgcm_update (32 samples, 0.73%)</title><rect x="74.7447%" y="501" width="0.7261%" height="15" fill="rgb(211,52,33)" fg:x="3294" fg:w="32"/><text x="74.9947%" y="511.50"></text></g><g><title>timingsafe_enable_if_supported (3 samples, 0.07%)</title><rect x="75.4028%" y="485" width="0.0681%" height="15" fill="rgb(234,58,33)" fg:x="3323" fg:w="3"/><text x="75.6528%" y="495.50"></text></g><g><title>CCSymmAEADDecrypt (60 samples, 1.36%)</title><rect x="74.1548%" y="517" width="1.3615%" height="15" fill="rgb(220,115,36)" fg:x="3268" fg:w="60"/><text x="74.4048%" y="527.50"></text></g><g><title>timingsafe_enable_if_supported (2 samples, 0.05%)</title><rect x="75.4708%" y="501" width="0.0454%" height="15" fill="rgb(243,153,54)" fg:x="3326" fg:w="2"/><text x="75.7208%" y="511.50"></text></g><g><title>SSLDecryptRecord (69 samples, 1.57%)</title><rect x="73.9732%" y="533" width="1.5657%" height="15" fill="rgb(251,47,18)" fg:x="3260" fg:w="69"/><text x="74.2232%" y="543.50"></text></g><g><title>ccgcm_update (1 samples, 0.02%)</title><rect x="75.5162%" y="517" width="0.0227%" height="15" fill="rgb(242,102,42)" fg:x="3328" fg:w="1"/><text x="75.7662%" y="527.50"></text></g><g><title>ccmode_gcm_aad (3 samples, 0.07%)</title><rect x="75.5843%" y="517" width="0.0681%" height="15" fill="rgb(234,31,38)" fg:x="3331" fg:w="3"/><text x="75.8343%" y="527.50"></text></g><g><title>ccgcm_gmac (7 samples, 0.16%)</title><rect x="75.5389%" y="533" width="0.1588%" height="15" fill="rgb(221,117,51)" fg:x="3329" fg:w="7"/><text x="75.7889%" y="543.50"></text></g><g><title>timingsafe_enable_if_supported (2 samples, 0.05%)</title><rect x="75.6524%" y="517" width="0.0454%" height="15" fill="rgb(212,20,18)" fg:x="3334" fg:w="2"/><text x="75.9024%" y="527.50"></text></g><g><title>AccelerateCrypto_ecb_AES_encrypt (3 samples, 0.07%)</title><rect x="75.7885%" y="517" width="0.0681%" height="15" fill="rgb(245,133,36)" fg:x="3340" fg:w="3"/><text x="76.0385%" y="527.50"></text></g><g><title>aes_key_expansion (6 samples, 0.14%)</title><rect x="75.8566%" y="517" width="0.1361%" height="15" fill="rgb(212,6,19)" fg:x="3343" fg:w="6"/><text x="76.1066%" y="527.50"></text></g><g><title>cc_disable_dit_with_sb (1 samples, 0.02%)</title><rect x="75.9927%" y="517" width="0.0227%" height="15" fill="rgb(218,1,36)" fg:x="3349" fg:w="1"/><text x="76.2427%" y="527.50"></text></g><g><title>ccaes_arm_encrypt_ecb (1 samples, 0.02%)</title><rect x="76.0154%" y="517" width="0.0227%" height="15" fill="rgb(246,84,54)" fg:x="3350" fg:w="1"/><text x="76.2654%" y="527.50"></text></g><g><title>ccaes_arm_encrypt_key (4 samples, 0.09%)</title><rect x="76.0381%" y="517" width="0.0908%" height="15" fill="rgb(242,110,6)" fg:x="3351" fg:w="4"/><text x="76.2881%" y="527.50"></text></g><g><title>ccaes_arm_encrypt_key128 (1 samples, 0.02%)</title><rect x="76.1289%" y="517" width="0.0227%" height="15" fill="rgb(214,47,5)" fg:x="3355" fg:w="1"/><text x="76.3789%" y="527.50"></text></g><g><title>aes_key_expansion (6 samples, 0.14%)</title><rect x="76.1516%" y="501" width="0.1361%" height="15" fill="rgb(218,159,25)" fg:x="3356" fg:w="6"/><text x="76.4016%" y="511.50"></text></g><g><title>ccaes_arm_encrypt_key (7 samples, 0.16%)</title><rect x="76.1516%" y="517" width="0.1588%" height="15" fill="rgb(215,211,28)" fg:x="3356" fg:w="7"/><text x="76.4016%" y="527.50"></text></g><g><title>ccaes_arm_encrypt_key128 (1 samples, 0.02%)</title><rect x="76.2877%" y="501" width="0.0227%" height="15" fill="rgb(238,59,32)" fg:x="3362" fg:w="1"/><text x="76.5377%" y="511.50"></text></g><g><title>ccaes_arm_encrypt_key_with_key_length_check (2 samples, 0.05%)</title><rect x="76.3104%" y="517" width="0.0454%" height="15" fill="rgb(226,82,3)" fg:x="3363" fg:w="2"/><text x="76.5604%" y="527.50"></text></g><g><title>AccelerateCrypto_ecb_AES_encrypt (5 samples, 0.11%)</title><rect x="76.4466%" y="501" width="0.1135%" height="15" fill="rgb(240,164,32)" fg:x="3369" fg:w="5"/><text x="76.6966%" y="511.50"></text></g><g><title>DYLD-STUB$$memset_s (2 samples, 0.05%)</title><rect x="76.5600%" y="501" width="0.0454%" height="15" fill="rgb(232,46,7)" fg:x="3374" fg:w="2"/><text x="76.8100%" y="511.50"></text></g><g><title>cc_clear (2 samples, 0.05%)</title><rect x="76.6054%" y="501" width="0.0454%" height="15" fill="rgb(229,129,53)" fg:x="3376" fg:w="2"/><text x="76.8554%" y="511.50"></text></g><g><title>ccaes_arm_encrypt_ecb (5 samples, 0.11%)</title><rect x="76.6508%" y="501" width="0.1135%" height="15" fill="rgb(234,188,29)" fg:x="3378" fg:w="5"/><text x="76.9008%" y="511.50"></text></g><g><title>ccaes_arm_encrypt_key (1 samples, 0.02%)</title><rect x="76.7642%" y="501" width="0.0227%" height="15" fill="rgb(246,141,4)" fg:x="3383" fg:w="1"/><text x="77.0142%" y="511.50"></text></g><g><title>ccaes_arm_encrypt_key_with_key_length_check (2 samples, 0.05%)</title><rect x="76.7869%" y="501" width="0.0454%" height="15" fill="rgb(229,23,39)" fg:x="3384" fg:w="2"/><text x="77.0369%" y="511.50"></text></g><g><title>DYLD-STUB$$memset_s (1 samples, 0.02%)</title><rect x="76.8323%" y="485" width="0.0227%" height="15" fill="rgb(206,12,3)" fg:x="3386" fg:w="1"/><text x="77.0823%" y="495.50"></text></g><g><title>DYLD-STUB$$mkostemps (4 samples, 0.09%)</title><rect x="76.8550%" y="485" width="0.0908%" height="15" fill="rgb(252,226,20)" fg:x="3387" fg:w="4"/><text x="77.1050%" y="495.50"></text></g><g><title>_platform_memset (1 samples, 0.02%)</title><rect x="76.9458%" y="485" width="0.0227%" height="15" fill="rgb(216,123,35)" fg:x="3391" fg:w="1"/><text x="77.1958%" y="495.50"></text></g><g><title>cc_clear (2 samples, 0.05%)</title><rect x="76.9685%" y="485" width="0.0454%" height="15" fill="rgb(212,68,40)" fg:x="3392" fg:w="2"/><text x="77.2185%" y="495.50"></text></g><g><title>DYLD-STUB$$mkostemps (4 samples, 0.09%)</title><rect x="77.0592%" y="469" width="0.0908%" height="15" fill="rgb(254,125,32)" fg:x="3396" fg:w="4"/><text x="77.3092%" y="479.50"></text></g><g><title>ccmode_gcm_reset (16 samples, 0.36%)</title><rect x="76.8323%" y="501" width="0.3631%" height="15" fill="rgb(253,97,22)" fg:x="3386" fg:w="16"/><text x="77.0823%" y="511.50"></text></g><g><title>memset_s (8 samples, 0.18%)</title><rect x="77.0138%" y="485" width="0.1815%" height="15" fill="rgb(241,101,14)" fg:x="3394" fg:w="8"/><text x="77.2638%" y="495.50"></text></g><g><title>_platform_memset (2 samples, 0.05%)</title><rect x="77.1500%" y="469" width="0.0454%" height="15" fill="rgb(238,103,29)" fg:x="3400" fg:w="2"/><text x="77.4000%" y="479.50"></text></g><g><title>ccmode_gcm_init (45 samples, 1.02%)</title><rect x="76.3558%" y="517" width="1.0211%" height="15" fill="rgb(233,195,47)" fg:x="3365" fg:w="45"/><text x="76.6058%" y="527.50"></text></g><g><title>gcm_init (8 samples, 0.18%)</title><rect x="77.1954%" y="501" width="0.1815%" height="15" fill="rgb(246,218,30)" fg:x="3402" fg:w="8"/><text x="77.4454%" y="511.50"></text></g><g><title>ccmode_gcm_set_iv (5 samples, 0.11%)</title><rect x="77.3769%" y="517" width="0.1135%" height="15" fill="rgb(219,145,47)" fg:x="3410" fg:w="5"/><text x="77.6269%" y="527.50"></text></g><g><title>ccmode_gcm_update_pad (1 samples, 0.02%)</title><rect x="77.4677%" y="501" width="0.0227%" height="15" fill="rgb(243,12,26)" fg:x="3414" fg:w="1"/><text x="77.7177%" y="511.50"></text></g><g><title>gcm_init (3 samples, 0.07%)</title><rect x="77.4904%" y="517" width="0.0681%" height="15" fill="rgb(214,87,16)" fg:x="3415" fg:w="3"/><text x="77.7404%" y="527.50"></text></g><g><title>ccgcm_init_with_iv (90 samples, 2.04%)</title><rect x="75.6978%" y="533" width="2.0422%" height="15" fill="rgb(208,99,42)" fg:x="3336" fg:w="90"/><text x="75.9478%" y="543.50">c..</text></g><g><title>timingsafe_enable_if_supported (8 samples, 0.18%)</title><rect x="77.5584%" y="517" width="0.1815%" height="15" fill="rgb(253,99,2)" fg:x="3418" fg:w="8"/><text x="77.8084%" y="527.50"></text></g><g><title>ccmode_gcm_init (1 samples, 0.02%)</title><rect x="77.7400%" y="533" width="0.0227%" height="15" fill="rgb(220,168,23)" fg:x="3426" fg:w="1"/><text x="77.9900%" y="543.50"></text></g><g><title>ccmode_gcm_set_iv (4 samples, 0.09%)</title><rect x="77.7627%" y="533" width="0.0908%" height="15" fill="rgb(242,38,24)" fg:x="3427" fg:w="4"/><text x="78.0127%" y="543.50"></text></g><g><title>tls_record_decrypt (201 samples, 4.56%)</title><rect x="73.4286%" y="549" width="4.5609%" height="15" fill="rgb(225,182,9)" fg:x="3236" fg:w="201"/><text x="73.6786%" y="559.50">tls_r..</text></g><g><title>timingsafe_enable_if_supported (6 samples, 0.14%)</title><rect x="77.8534%" y="533" width="0.1361%" height="15" fill="rgb(243,178,37)" fg:x="3431" fg:w="6"/><text x="78.1034%" y="543.50"></text></g><g><title>tls_record_decrypted_size (13 samples, 0.29%)</title><rect x="77.9896%" y="549" width="0.2950%" height="15" fill="rgb(232,139,19)" fg:x="3437" fg:w="13"/><text x="78.2396%" y="559.50"></text></g><g><title>tls_record_get_header_size (1 samples, 0.02%)</title><rect x="78.2845%" y="549" width="0.0227%" height="15" fill="rgb(225,201,24)" fg:x="3450" fg:w="1"/><text x="78.5345%" y="559.50"></text></g><g><title>SSLRecordReadInternal (2,633 samples, 59.75%)</title><rect x="18.5841%" y="565" width="59.7459%" height="15" fill="rgb(221,47,46)" fg:x="819" fg:w="2633"/><text x="18.8341%" y="575.50">SSLRecordReadInternal</text></g><g><title>tls_record_parse_header (1 samples, 0.02%)</title><rect x="78.3072%" y="549" width="0.0227%" height="15" fill="rgb(249,23,13)" fg:x="3451" fg:w="1"/><text x="78.5572%" y="559.50"></text></g><g><title>SSLDecodeInt (1 samples, 0.02%)</title><rect x="78.3072%" y="533" width="0.0227%" height="15" fill="rgb(219,9,5)" fg:x="3451" fg:w="1"/><text x="78.5572%" y="543.50"></text></g><g><title>SSLRecordServiceWriteQueueInternal (9 samples, 0.20%)</title><rect x="78.3299%" y="565" width="0.2042%" height="15" fill="rgb(254,171,16)" fg:x="3452" fg:w="9"/><text x="78.5799%" y="575.50"></text></g><g><title>_free (1 samples, 0.02%)</title><rect x="78.5342%" y="565" width="0.0227%" height="15" fill="rgb(230,171,20)" fg:x="3461" fg:w="1"/><text x="78.7842%" y="575.50"></text></g><g><title>_platform_memmove (2 samples, 0.05%)</title><rect x="78.5568%" y="565" width="0.0454%" height="15" fill="rgb(210,71,41)" fg:x="3462" fg:w="2"/><text x="78.8068%" y="575.50"></text></g><g><title>free_tiny (1 samples, 0.02%)</title><rect x="78.6022%" y="565" width="0.0227%" height="15" fill="rgb(206,173,20)" fg:x="3464" fg:w="1"/><text x="78.8522%" y="575.50"></text></g><g><title>tls_handshake_continue (16 samples, 0.36%)</title><rect x="78.6249%" y="565" width="0.3631%" height="15" fill="rgb(233,88,34)" fg:x="3465" fg:w="16"/><text x="78.8749%" y="575.50"></text></g><g><title>tls_record_decrypted_size (4 samples, 0.09%)</title><rect x="78.9880%" y="565" width="0.0908%" height="15" fill="rgb(223,209,46)" fg:x="3481" fg:w="4"/><text x="79.2380%" y="575.50"></text></g><g><title>SSLRead (2,715 samples, 61.61%)</title><rect x="17.5176%" y="581" width="61.6065%" height="15" fill="rgb(250,43,18)" fg:x="772" fg:w="2715"/><text x="17.7676%" y="591.50">SSLRead</text></g><g><title>tls_record_get_header_size (2 samples, 0.05%)</title><rect x="79.0787%" y="565" width="0.0454%" height="15" fill="rgb(208,13,10)" fg:x="3485" fg:w="2"/><text x="79.3287%" y="575.50"></text></g><g><title>0x10116187c (2,741 samples, 62.20%)</title><rect x="17.0638%" y="597" width="62.1965%" height="15" fill="rgb(212,200,36)" fg:x="752" fg:w="2741"/><text x="17.3138%" y="607.50">0x10116187c</text></g><g><title>tls_handshake_continue (6 samples, 0.14%)</title><rect x="79.1241%" y="581" width="0.1361%" height="15" fill="rgb(225,90,30)" fg:x="3487" fg:w="6"/><text x="79.3741%" y="591.50"></text></g><g><title>DYLD-STUB$$SSLGetConnection (3 samples, 0.07%)</title><rect x="79.2603%" y="597" width="0.0681%" height="15" fill="rgb(236,182,39)" fg:x="3493" fg:w="3"/><text x="79.5103%" y="607.50"></text></g><g><title>SSLGetBufferedReadSize (2 samples, 0.05%)</title><rect x="79.3283%" y="597" width="0.0454%" height="15" fill="rgb(212,144,35)" fg:x="3496" fg:w="2"/><text x="79.5783%" y="607.50"></text></g><g><title>SSLGetConnection (6 samples, 0.14%)</title><rect x="79.3737%" y="597" width="0.1361%" height="15" fill="rgb(228,63,44)" fg:x="3498" fg:w="6"/><text x="79.6237%" y="607.50"></text></g><g><title>0x101030c44 (2,761 samples, 62.65%)</title><rect x="16.9276%" y="613" width="62.6503%" height="15" fill="rgb(228,109,6)" fg:x="746" fg:w="2761"/><text x="17.1776%" y="623.50">0x101030c44</text></g><g><title>SSLRead (3 samples, 0.07%)</title><rect x="79.5099%" y="597" width="0.0681%" height="15" fill="rgb(238,117,24)" fg:x="3504" fg:w="3"/><text x="79.7599%" y="607.50"></text></g><g><title>0x10103ff40 (56 samples, 1.27%)</title><rect x="79.5779%" y="613" width="1.2707%" height="15" fill="rgb(242,26,26)" fg:x="3507" fg:w="56"/><text x="79.8279%" y="623.50"></text></g><g><title>0x10107b548 (4 samples, 0.09%)</title><rect x="80.8486%" y="613" width="0.0908%" height="15" fill="rgb(221,92,48)" fg:x="3563" fg:w="4"/><text x="81.0986%" y="623.50"></text></g><g><title>0x101206858 (2 samples, 0.05%)</title><rect x="80.9394%" y="613" width="0.0454%" height="15" fill="rgb(209,209,32)" fg:x="3567" fg:w="2"/><text x="81.1894%" y="623.50"></text></g><g><title>SSLGetConnection (3 samples, 0.07%)</title><rect x="80.9848%" y="613" width="0.0681%" height="15" fill="rgb(221,70,22)" fg:x="3569" fg:w="3"/><text x="81.2348%" y="623.50"></text></g><g><title>__bzero (47 samples, 1.07%)</title><rect x="81.0529%" y="613" width="1.0665%" height="15" fill="rgb(248,145,5)" fg:x="3572" fg:w="47"/><text x="81.3029%" y="623.50"></text></g><g><title>_platform_memmove (2 samples, 0.05%)</title><rect x="82.1194%" y="613" width="0.0454%" height="15" fill="rgb(226,116,26)" fg:x="3619" fg:w="2"/><text x="82.3694%" y="623.50"></text></g><g><title>0x10103ff40 (2,895 samples, 65.69%)</title><rect x="16.6780%" y="629" width="65.6909%" height="15" fill="rgb(244,5,17)" fg:x="735" fg:w="2895"/><text x="16.9280%" y="639.50">0x10103ff40</text></g><g><title>_platform_memset (9 samples, 0.20%)</title><rect x="82.1647%" y="613" width="0.2042%" height="15" fill="rgb(252,159,33)" fg:x="3621" fg:w="9"/><text x="82.4147%" y="623.50"></text></g><g><title>0x1010289ec (2 samples, 0.05%)</title><rect x="82.5959%" y="613" width="0.0454%" height="15" fill="rgb(206,71,0)" fg:x="3640" fg:w="2"/><text x="82.8459%" y="623.50"></text></g><g><title>0x10102fc78 (3 samples, 0.07%)</title><rect x="83.1178%" y="597" width="0.0681%" height="15" fill="rgb(233,118,54)" fg:x="3663" fg:w="3"/><text x="83.3678%" y="607.50"></text></g><g><title>0x101039254 (27 samples, 0.61%)</title><rect x="82.6413%" y="613" width="0.6127%" height="15" fill="rgb(234,83,48)" fg:x="3642" fg:w="27"/><text x="82.8913%" y="623.50"></text></g><g><title>_platform_memcmp (3 samples, 0.07%)</title><rect x="83.1858%" y="597" width="0.0681%" height="15" fill="rgb(228,3,54)" fg:x="3666" fg:w="3"/><text x="83.4358%" y="607.50"></text></g><g><title>0x10104be3c (1 samples, 0.02%)</title><rect x="83.2539%" y="613" width="0.0227%" height="15" fill="rgb(226,155,13)" fg:x="3669" fg:w="1"/><text x="83.5039%" y="623.50"></text></g><g><title>0x10104d4a8 (1 samples, 0.02%)</title><rect x="83.2539%" y="597" width="0.0227%" height="15" fill="rgb(241,28,37)" fg:x="3669" fg:w="1"/><text x="83.5039%" y="607.50"></text></g><g><title>0x10104d088 (252 samples, 5.72%)</title><rect x="83.2766%" y="613" width="5.7182%" height="15" fill="rgb(233,93,10)" fg:x="3670" fg:w="252"/><text x="83.5266%" y="623.50">0x10104..</text></g><g><title>0x10102fc78 (3 samples, 0.07%)</title><rect x="89.1536%" y="597" width="0.0681%" height="15" fill="rgb(225,113,19)" fg:x="3929" fg:w="3"/><text x="89.4036%" y="607.50"></text></g><g><title>0x10102fc78 (28 samples, 0.64%)</title><rect x="90.6285%" y="581" width="0.6354%" height="15" fill="rgb(241,2,18)" fg:x="3994" fg:w="28"/><text x="90.8785%" y="591.50"></text></g><g><title>0x101039254 (97 samples, 2.20%)</title><rect x="89.2217%" y="597" width="2.2010%" height="15" fill="rgb(228,207,21)" fg:x="3932" fg:w="97"/><text x="89.4717%" y="607.50">0..</text></g><g><title>_platform_memcmp (7 samples, 0.16%)</title><rect x="91.2639%" y="581" width="0.1588%" height="15" fill="rgb(213,211,35)" fg:x="4022" fg:w="7"/><text x="91.5139%" y="591.50"></text></g><g><title>0x10104d4a8 (58 samples, 1.32%)</title><rect x="91.4227%" y="597" width="1.3161%" height="15" fill="rgb(209,83,10)" fg:x="4029" fg:w="58"/><text x="91.6727%" y="607.50"></text></g><g><title>mach_absolute_time (3 samples, 0.07%)</title><rect x="92.7842%" y="549" width="0.0681%" height="15" fill="rgb(209,164,1)" fg:x="4089" fg:w="3"/><text x="93.0342%" y="559.50"></text></g><g><title>clock_gettime_nsec_np (4 samples, 0.09%)</title><rect x="92.7842%" y="565" width="0.0908%" height="15" fill="rgb(213,184,43)" fg:x="4089" fg:w="4"/><text x="93.0342%" y="575.50"></text></g><g><title>mach_timebase_info (1 samples, 0.02%)</title><rect x="92.8523%" y="549" width="0.0227%" height="15" fill="rgb(231,61,34)" fg:x="4092" fg:w="1"/><text x="93.1023%" y="559.50"></text></g><g><title>0x1011eebc0 (8 samples, 0.18%)</title><rect x="92.7388%" y="597" width="0.1815%" height="15" fill="rgb(235,75,3)" fg:x="4087" fg:w="8"/><text x="92.9888%" y="607.50"></text></g><g><title>clock_gettime (7 samples, 0.16%)</title><rect x="92.7615%" y="581" width="0.1588%" height="15" fill="rgb(220,106,47)" fg:x="4088" fg:w="7"/><text x="93.0115%" y="591.50"></text></g><g><title>mach_absolute_time (2 samples, 0.05%)</title><rect x="92.8750%" y="565" width="0.0454%" height="15" fill="rgb(210,196,33)" fg:x="4093" fg:w="2"/><text x="93.1250%" y="575.50"></text></g><g><title>0x10104d4a8 (182 samples, 4.13%)</title><rect x="88.9948%" y="613" width="4.1298%" height="15" fill="rgb(229,154,42)" fg:x="3922" fg:w="182"/><text x="89.2448%" y="623.50">0x10..</text></g><g><title>_platform_memcmp (9 samples, 0.20%)</title><rect x="92.9204%" y="597" width="0.2042%" height="15" fill="rgb(228,114,26)" fg:x="4095" fg:w="9"/><text x="93.1704%" y="607.50"></text></g><g><title>0x10104fabc (8 samples, 0.18%)</title><rect x="93.1246%" y="613" width="0.1815%" height="15" fill="rgb(208,144,1)" fg:x="4104" fg:w="8"/><text x="93.3746%" y="623.50"></text></g><g><title>0x101213ae0 (4 samples, 0.09%)</title><rect x="93.3061%" y="613" width="0.0908%" height="15" fill="rgb(239,112,37)" fg:x="4112" fg:w="4"/><text x="93.5561%" y="623.50"></text></g><g><title>0x101213bc8 (4 samples, 0.09%)</title><rect x="93.3061%" y="597" width="0.0908%" height="15" fill="rgb(210,96,50)" fg:x="4112" fg:w="4"/><text x="93.5561%" y="607.50"></text></g><g><title>0x10124d0d4 (4 samples, 0.09%)</title><rect x="93.3061%" y="581" width="0.0908%" height="15" fill="rgb(222,178,2)" fg:x="4112" fg:w="4"/><text x="93.5561%" y="591.50"></text></g><g><title>__psynch_cvsignal (4 samples, 0.09%)</title><rect x="93.3061%" y="565" width="0.0908%" height="15" fill="rgb(226,74,18)" fg:x="4112" fg:w="4"/><text x="93.5561%" y="575.50"></text></g><g><title>_platform_memcmp (6 samples, 0.14%)</title><rect x="93.3969%" y="613" width="0.1361%" height="15" fill="rgb(225,67,54)" fg:x="4116" fg:w="6"/><text x="93.6469%" y="623.50"></text></g><g><title>0x10104be3c (493 samples, 11.19%)</title><rect x="82.3690%" y="629" width="11.1867%" height="15" fill="rgb(251,92,32)" fg:x="3630" fg:w="493"/><text x="82.6190%" y="639.50">0x10104be3c</text></g><g><title>_posix_memalign (1 samples, 0.02%)</title><rect x="93.5330%" y="613" width="0.0227%" height="15" fill="rgb(228,149,22)" fg:x="4122" fg:w="1"/><text x="93.7830%" y="623.50"></text></g><g><title>_malloc_zone_memalign (1 samples, 0.02%)</title><rect x="93.5330%" y="597" width="0.0227%" height="15" fill="rgb(243,54,13)" fg:x="4122" fg:w="1"/><text x="93.7830%" y="607.50"></text></g><g><title>0x10106ae34 (14 samples, 0.32%)</title><rect x="93.5557%" y="629" width="0.3177%" height="15" fill="rgb(243,180,28)" fg:x="4123" fg:w="14"/><text x="93.8057%" y="639.50"></text></g><g><title>0x10103ff40 (14 samples, 0.32%)</title><rect x="93.5557%" y="613" width="0.3177%" height="15" fill="rgb(208,167,24)" fg:x="4123" fg:w="14"/><text x="93.8057%" y="623.50"></text></g><g><title>0x10107ae5c (2 samples, 0.05%)</title><rect x="93.8734%" y="629" width="0.0454%" height="15" fill="rgb(245,73,45)" fg:x="4137" fg:w="2"/><text x="94.1234%" y="639.50"></text></g><g><title>0x1010ee840 (2 samples, 0.05%)</title><rect x="93.9188%" y="629" width="0.0454%" height="15" fill="rgb(237,203,48)" fg:x="4139" fg:w="2"/><text x="94.1688%" y="639.50"></text></g><g><title>0x10121793c (4 samples, 0.09%)</title><rect x="93.9641%" y="629" width="0.0908%" height="15" fill="rgb(211,197,16)" fg:x="4141" fg:w="4"/><text x="94.2141%" y="639.50"></text></g><g><title>0x101217c18 (4 samples, 0.09%)</title><rect x="94.0549%" y="629" width="0.0908%" height="15" fill="rgb(243,99,51)" fg:x="4145" fg:w="4"/><text x="94.3049%" y="639.50"></text></g><g><title>0x101242984 (3 samples, 0.07%)</title><rect x="94.1457%" y="629" width="0.0681%" height="15" fill="rgb(215,123,29)" fg:x="4149" fg:w="3"/><text x="94.3957%" y="639.50"></text></g><g><title>__bzero (24 samples, 0.54%)</title><rect x="94.2138%" y="629" width="0.5446%" height="15" fill="rgb(239,186,37)" fg:x="4152" fg:w="24"/><text x="94.4638%" y="639.50"></text></g><g><title>_free (1 samples, 0.02%)</title><rect x="94.7583%" y="629" width="0.0227%" height="15" fill="rgb(252,136,39)" fg:x="4176" fg:w="1"/><text x="95.0083%" y="639.50"></text></g><g><title>_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="94.7810%" y="629" width="0.0227%" height="15" fill="rgb(223,213,32)" fg:x="4177" fg:w="1"/><text x="95.0310%" y="639.50"></text></g><g><title>_platform_memcmp (4 samples, 0.09%)</title><rect x="94.8037%" y="629" width="0.0908%" height="15" fill="rgb(233,115,5)" fg:x="4178" fg:w="4"/><text x="95.0537%" y="639.50"></text></g><g><title>_platform_memmove (13 samples, 0.29%)</title><rect x="94.8945%" y="629" width="0.2950%" height="15" fill="rgb(207,226,44)" fg:x="4182" fg:w="13"/><text x="95.1445%" y="639.50"></text></g><g><title>_platform_memset (4 samples, 0.09%)</title><rect x="95.1895%" y="629" width="0.0908%" height="15" fill="rgb(208,126,0)" fg:x="4195" fg:w="4"/><text x="95.4395%" y="639.50"></text></g><g><title>_tlv_get_addr (1 samples, 0.02%)</title><rect x="95.2802%" y="629" width="0.0227%" height="15" fill="rgb(244,66,21)" fg:x="4199" fg:w="1"/><text x="95.5302%" y="639.50"></text></g><g><title>free (1 samples, 0.02%)</title><rect x="95.3029%" y="629" width="0.0227%" height="15" fill="rgb(222,97,12)" fg:x="4200" fg:w="1"/><text x="95.5529%" y="639.50"></text></g><g><title>_platform_memset (1 samples, 0.02%)</title><rect x="95.4618%" y="613" width="0.0227%" height="15" fill="rgb(219,213,19)" fg:x="4207" fg:w="1"/><text x="95.7118%" y="623.50"></text></g><g><title>tiny_free_list_add_ptr (1 samples, 0.02%)</title><rect x="95.5752%" y="597" width="0.0227%" height="15" fill="rgb(252,169,30)" fg:x="4212" fg:w="1"/><text x="95.8252%" y="607.50"></text></g><g><title>free_tiny (13 samples, 0.29%)</title><rect x="95.3256%" y="629" width="0.2950%" height="15" fill="rgb(206,32,51)" fg:x="4201" fg:w="13"/><text x="95.5756%" y="639.50"></text></g><g><title>tiny_free_no_lock (6 samples, 0.14%)</title><rect x="95.4845%" y="613" width="0.1361%" height="15" fill="rgb(250,172,42)" fg:x="4208" fg:w="6"/><text x="95.7345%" y="623.50"></text></g><g><title>tiny_free_list_remove_ptr (1 samples, 0.02%)</title><rect x="95.5979%" y="597" width="0.0227%" height="15" fill="rgb(209,34,43)" fg:x="4213" fg:w="1"/><text x="95.8479%" y="607.50"></text></g><g><title>malloc (3 samples, 0.07%)</title><rect x="95.6206%" y="629" width="0.0681%" height="15" fill="rgb(223,11,35)" fg:x="4214" fg:w="3"/><text x="95.8706%" y="639.50"></text></g><g><title>0x10106ae34 (3,613 samples, 81.98%)</title><rect x="14.1820%" y="645" width="81.9832%" height="15" fill="rgb(251,219,26)" fg:x="625" fg:w="3613"/><text x="14.4320%" y="655.50">0x10106ae34</text></g><g><title>szone_malloc_should_clear (21 samples, 0.48%)</title><rect x="95.6887%" y="629" width="0.4765%" height="15" fill="rgb(231,119,3)" fg:x="4217" fg:w="21"/><text x="95.9387%" y="639.50"></text></g><g><title>tiny_malloc_should_clear (19 samples, 0.43%)</title><rect x="95.7341%" y="613" width="0.4311%" height="15" fill="rgb(216,97,11)" fg:x="4219" fg:w="19"/><text x="95.9841%" y="623.50"></text></g><g><title>tiny_malloc_from_free_list (18 samples, 0.41%)</title><rect x="95.7568%" y="597" width="0.4084%" height="15" fill="rgb(223,59,9)" fg:x="4220" fg:w="18"/><text x="96.0068%" y="607.50"></text></g><g><title>tiny_free_list_add_ptr (3 samples, 0.07%)</title><rect x="96.0971%" y="581" width="0.0681%" height="15" fill="rgb(233,93,31)" fg:x="4235" fg:w="3"/><text x="96.3471%" y="591.50"></text></g><g><title>0x101026ac4 (3,630 samples, 82.37%)</title><rect x="14.0231%" y="661" width="82.3690%" height="15" fill="rgb(239,81,33)" fg:x="618" fg:w="3630"/><text x="14.2731%" y="671.50">0x101026ac4</text></g><g><title>_platform_memmove (10 samples, 0.23%)</title><rect x="96.1652%" y="645" width="0.2269%" height="15" fill="rgb(213,120,34)" fg:x="4238" fg:w="10"/><text x="96.4152%" y="655.50"></text></g><g><title>0x10102a964 (1 samples, 0.02%)</title><rect x="96.3921%" y="661" width="0.0227%" height="15" fill="rgb(243,49,53)" fg:x="4248" fg:w="1"/><text x="96.6421%" y="671.50"></text></g><g><title>0x101213918 (1 samples, 0.02%)</title><rect x="96.3921%" y="645" width="0.0227%" height="15" fill="rgb(247,216,33)" fg:x="4248" fg:w="1"/><text x="96.6421%" y="655.50"></text></g><g><title>0x1010cd138 (1 samples, 0.02%)</title><rect x="96.4829%" y="613" width="0.0227%" height="15" fill="rgb(226,26,14)" fg:x="4252" fg:w="1"/><text x="96.7329%" y="623.50"></text></g><g><title>0x1010c9e40 (1 samples, 0.02%)</title><rect x="96.4829%" y="597" width="0.0227%" height="15" fill="rgb(215,49,53)" fg:x="4252" fg:w="1"/><text x="96.7329%" y="607.50"></text></g><g><title>0x1010d3344 (4 samples, 0.09%)</title><rect x="96.5056%" y="613" width="0.0908%" height="15" fill="rgb(245,162,40)" fg:x="4253" fg:w="4"/><text x="96.7556%" y="623.50"></text></g><g><title>0x10120fa38 (2 samples, 0.05%)</title><rect x="96.5509%" y="597" width="0.0454%" height="15" fill="rgb(229,68,17)" fg:x="4255" fg:w="2"/><text x="96.8009%" y="607.50"></text></g><g><title>0x10124d0d4 (2 samples, 0.05%)</title><rect x="96.5509%" y="581" width="0.0454%" height="15" fill="rgb(213,182,10)" fg:x="4255" fg:w="2"/><text x="96.8009%" y="591.50"></text></g><g><title>__psynch_cvsignal (2 samples, 0.05%)</title><rect x="96.5509%" y="565" width="0.0454%" height="15" fill="rgb(245,125,30)" fg:x="4255" fg:w="2"/><text x="96.8009%" y="575.50"></text></g><g><title>0x1010d4d14 (1 samples, 0.02%)</title><rect x="96.5963%" y="613" width="0.0227%" height="15" fill="rgb(232,202,2)" fg:x="4257" fg:w="1"/><text x="96.8463%" y="623.50"></text></g><g><title>0x101189fd0 (2 samples, 0.05%)</title><rect x="96.6190%" y="613" width="0.0454%" height="15" fill="rgb(237,140,51)" fg:x="4258" fg:w="2"/><text x="96.8690%" y="623.50"></text></g><g><title>0x101152ef8 (2 samples, 0.05%)</title><rect x="96.6190%" y="597" width="0.0454%" height="15" fill="rgb(236,157,25)" fg:x="4258" fg:w="2"/><text x="96.8690%" y="607.50"></text></g><g><title>0x1011530dc (2 samples, 0.05%)</title><rect x="96.6190%" y="581" width="0.0454%" height="15" fill="rgb(219,209,0)" fg:x="4258" fg:w="2"/><text x="96.8690%" y="591.50"></text></g><g><title>0x1012069bc (1 samples, 0.02%)</title><rect x="96.6417%" y="565" width="0.0227%" height="15" fill="rgb(240,116,54)" fg:x="4259" fg:w="1"/><text x="96.8917%" y="575.50"></text></g><g><title>0x1011541e4 (1 samples, 0.02%)</title><rect x="96.6644%" y="581" width="0.0227%" height="15" fill="rgb(216,10,36)" fg:x="4260" fg:w="1"/><text x="96.9144%" y="591.50"></text></g><g><title>0x10116783c (4 samples, 0.09%)</title><rect x="96.6871%" y="533" width="0.0908%" height="15" fill="rgb(222,72,44)" fg:x="4261" fg:w="4"/><text x="96.9371%" y="543.50"></text></g><g><title>__recvfrom (4 samples, 0.09%)</title><rect x="96.6871%" y="517" width="0.0908%" height="15" fill="rgb(232,159,9)" fg:x="4261" fg:w="4"/><text x="96.9371%" y="527.50"></text></g><g><title>DYLD-STUB$$ccgcm_gmac (1 samples, 0.02%)</title><rect x="96.7779%" y="533" width="0.0227%" height="15" fill="rgb(210,39,32)" fg:x="4265" fg:w="1"/><text x="97.0279%" y="543.50"></text></g><g><title>ccmode_gcm_init (1 samples, 0.02%)</title><rect x="96.8005%" y="501" width="0.0227%" height="15" fill="rgb(216,194,45)" fg:x="4266" fg:w="1"/><text x="97.0505%" y="511.50"></text></g><g><title>memset_s (1 samples, 0.02%)</title><rect x="96.8005%" y="485" width="0.0227%" height="15" fill="rgb(218,18,35)" fg:x="4266" fg:w="1"/><text x="97.0505%" y="495.50"></text></g><g><title>0x101161664 (8 samples, 0.18%)</title><rect x="96.6644%" y="597" width="0.1815%" height="15" fill="rgb(207,83,51)" fg:x="4260" fg:w="8"/><text x="96.9144%" y="607.50"></text></g><g><title>0x10116187c (7 samples, 0.16%)</title><rect x="96.6871%" y="581" width="0.1588%" height="15" fill="rgb(225,63,43)" fg:x="4261" fg:w="7"/><text x="96.9371%" y="591.50"></text></g><g><title>SSLRead (7 samples, 0.16%)</title><rect x="96.6871%" y="565" width="0.1588%" height="15" fill="rgb(207,57,36)" fg:x="4261" fg:w="7"/><text x="96.9371%" y="575.50"></text></g><g><title>SSLRecordReadInternal (7 samples, 0.16%)</title><rect x="96.6871%" y="549" width="0.1588%" height="15" fill="rgb(216,99,33)" fg:x="4261" fg:w="7"/><text x="96.9371%" y="559.50"></text></g><g><title>tls_record_decrypt (2 samples, 0.05%)</title><rect x="96.8005%" y="533" width="0.0454%" height="15" fill="rgb(225,42,16)" fg:x="4266" fg:w="2"/><text x="97.0505%" y="543.50"></text></g><g><title>ccgcm_init_with_iv (2 samples, 0.05%)</title><rect x="96.8005%" y="517" width="0.0454%" height="15" fill="rgb(220,201,45)" fg:x="4266" fg:w="2"/><text x="97.0505%" y="527.50"></text></g><g><title>ccmode_gcm_set_iv (1 samples, 0.02%)</title><rect x="96.8232%" y="501" width="0.0227%" height="15" fill="rgb(225,33,4)" fg:x="4267" fg:w="1"/><text x="97.0732%" y="511.50"></text></g><g><title>0x10118b15c (11 samples, 0.25%)</title><rect x="96.6644%" y="613" width="0.2496%" height="15" fill="rgb(224,33,50)" fg:x="4260" fg:w="11"/><text x="96.9144%" y="623.50"></text></g><g><title>_platform_memset (3 samples, 0.07%)</title><rect x="96.8459%" y="597" width="0.0681%" height="15" fill="rgb(246,198,51)" fg:x="4268" fg:w="3"/><text x="97.0959%" y="607.50"></text></g><g><title>0x10118b2f8 (2 samples, 0.05%)</title><rect x="96.9140%" y="597" width="0.0454%" height="15" fill="rgb(205,22,4)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="607.50"></text></g><g><title>0x10118b15c (2 samples, 0.05%)</title><rect x="96.9140%" y="581" width="0.0454%" height="15" fill="rgb(206,3,8)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="591.50"></text></g><g><title>0x101161664 (2 samples, 0.05%)</title><rect x="96.9140%" y="565" width="0.0454%" height="15" fill="rgb(251,23,15)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="575.50"></text></g><g><title>0x10116187c (2 samples, 0.05%)</title><rect x="96.9140%" y="549" width="0.0454%" height="15" fill="rgb(252,88,28)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="559.50"></text></g><g><title>SSLRead (2 samples, 0.05%)</title><rect x="96.9140%" y="533" width="0.0454%" height="15" fill="rgb(212,127,14)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="543.50"></text></g><g><title>SSLRecordReadInternal (2 samples, 0.05%)</title><rect x="96.9140%" y="517" width="0.0454%" height="15" fill="rgb(247,145,37)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="527.50"></text></g><g><title>0x10116783c (2 samples, 0.05%)</title><rect x="96.9140%" y="501" width="0.0454%" height="15" fill="rgb(209,117,53)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="511.50"></text></g><g><title>__recvfrom (2 samples, 0.05%)</title><rect x="96.9140%" y="485" width="0.0454%" height="15" fill="rgb(212,90,42)" fg:x="4271" fg:w="2"/><text x="97.1640%" y="495.50"></text></g><g><title>0x10116783c (27 samples, 0.61%)</title><rect x="96.9821%" y="485" width="0.6127%" height="15" fill="rgb(218,164,37)" fg:x="4274" fg:w="27"/><text x="97.2321%" y="495.50"></text></g><g><title>__recvfrom (27 samples, 0.61%)</title><rect x="96.9821%" y="469" width="0.6127%" height="15" fill="rgb(246,65,34)" fg:x="4274" fg:w="27"/><text x="97.2321%" y="479.50"></text></g><g><title>SSLDecodeInt (1 samples, 0.02%)</title><rect x="97.5947%" y="485" width="0.0227%" height="15" fill="rgb(231,100,33)" fg:x="4301" fg:w="1"/><text x="97.8447%" y="495.50"></text></g><g><title>_platform_memmove (1 samples, 0.02%)</title><rect x="97.6174%" y="485" width="0.0227%" height="15" fill="rgb(228,126,14)" fg:x="4302" fg:w="1"/><text x="97.8674%" y="495.50"></text></g><g><title>ccaes_vng_gcm_decrypt (1 samples, 0.02%)</title><rect x="97.6401%" y="437" width="0.0227%" height="15" fill="rgb(215,173,21)" fg:x="4303" fg:w="1"/><text x="97.8901%" y="447.50"></text></g><g><title>ccgcm_update (6 samples, 0.14%)</title><rect x="97.6628%" y="437" width="0.1361%" height="15" fill="rgb(210,6,40)" fg:x="4304" fg:w="6"/><text x="97.9128%" y="447.50"></text></g><g><title>Decrypt_Main_Loop (6 samples, 0.14%)</title><rect x="97.6628%" y="421" width="0.1361%" height="15" fill="rgb(212,48,18)" fg:x="4304" fg:w="6"/><text x="97.9128%" y="431.50"></text></g><g><title>timingsafe_enable_if_supported (2 samples, 0.05%)</title><rect x="97.7990%" y="437" width="0.0454%" height="15" fill="rgb(230,214,11)" fg:x="4310" fg:w="2"/><text x="98.0490%" y="447.50"></text></g><g><title>SSLDecryptRecord (10 samples, 0.23%)</title><rect x="97.6401%" y="469" width="0.2269%" height="15" fill="rgb(254,105,39)" fg:x="4303" fg:w="10"/><text x="97.8901%" y="479.50"></text></g><g><title>CCSymmAEADDecrypt (10 samples, 0.23%)</title><rect x="97.6401%" y="453" width="0.2269%" height="15" fill="rgb(245,158,5)" fg:x="4303" fg:w="10"/><text x="97.8901%" y="463.50"></text></g><g><title>timingsafe_restore_if_supported (1 samples, 0.02%)</title><rect x="97.8443%" y="437" width="0.0227%" height="15" fill="rgb(249,208,11)" fg:x="4312" fg:w="1"/><text x="98.0943%" y="447.50"></text></g><g><title>SSLRecordReadInternal (40 samples, 0.91%)</title><rect x="96.9821%" y="501" width="0.9076%" height="15" fill="rgb(210,39,28)" fg:x="4274" fg:w="40"/><text x="97.2321%" y="511.50"></text></g><g><title>tls_record_decrypt (11 samples, 0.25%)</title><rect x="97.6401%" y="485" width="0.2496%" height="15" fill="rgb(211,56,53)" fg:x="4303" fg:w="11"/><text x="97.8901%" y="495.50"></text></g><g><title>ccgcm_init_with_iv (1 samples, 0.02%)</title><rect x="97.8670%" y="469" width="0.0227%" height="15" fill="rgb(226,201,30)" fg:x="4313" fg:w="1"/><text x="98.1170%" y="479.50"></text></g><g><title>aes_key_expansion (1 samples, 0.02%)</title><rect x="97.8670%" y="453" width="0.0227%" height="15" fill="rgb(239,101,34)" fg:x="4313" fg:w="1"/><text x="98.1170%" y="463.50"></text></g><g><title>SSLRead (41 samples, 0.93%)</title><rect x="96.9821%" y="517" width="0.9303%" height="15" fill="rgb(226,209,5)" fg:x="4274" fg:w="41"/><text x="97.2321%" y="527.50"></text></g><g><title>szone_malloc_type_malloc (1 samples, 0.02%)</title><rect x="97.8897%" y="501" width="0.0227%" height="15" fill="rgb(250,105,47)" fg:x="4314" fg:w="1"/><text x="98.1397%" y="511.50"></text></g><g><title>SSLRecordServiceWriteQueueInternal (1 samples, 0.02%)</title><rect x="97.9124%" y="517" width="0.0227%" height="15" fill="rgb(230,72,3)" fg:x="4315" fg:w="1"/><text x="98.1624%" y="527.50"></text></g><g><title>0x101161664 (45 samples, 1.02%)</title><rect x="96.9594%" y="549" width="1.0211%" height="15" fill="rgb(232,218,39)" fg:x="4273" fg:w="45"/><text x="97.2094%" y="559.50"></text></g><g><title>0x10116187c (44 samples, 1.00%)</title><rect x="96.9821%" y="533" width="0.9984%" height="15" fill="rgb(248,166,6)" fg:x="4274" fg:w="44"/><text x="97.2321%" y="543.50"></text></g><g><title>_platform_memmove (2 samples, 0.05%)</title><rect x="97.9351%" y="517" width="0.0454%" height="15" fill="rgb(247,89,20)" fg:x="4316" fg:w="2"/><text x="98.1851%" y="527.50"></text></g><g><title>__bzero (4 samples, 0.09%)</title><rect x="97.9805%" y="549" width="0.0908%" height="15" fill="rgb(248,130,54)" fg:x="4318" fg:w="4"/><text x="98.2305%" y="559.50"></text></g><g><title>0x10118b53c (52 samples, 1.18%)</title><rect x="96.9140%" y="613" width="1.1799%" height="15" fill="rgb(234,196,4)" fg:x="4271" fg:w="52"/><text x="97.1640%" y="623.50"></text></g><g><title>0x10118efe8 (50 samples, 1.13%)</title><rect x="96.9594%" y="597" width="1.1346%" height="15" fill="rgb(250,143,31)" fg:x="4273" fg:w="50"/><text x="97.2094%" y="607.50"></text></g><g><title>0x10118fc3c (50 samples, 1.13%)</title><rect x="96.9594%" y="581" width="1.1346%" height="15" fill="rgb(211,110,34)" fg:x="4273" fg:w="50"/><text x="97.2094%" y="591.50"></text></g><g><title>0x10118b15c (50 samples, 1.13%)</title><rect x="96.9594%" y="565" width="1.1346%" height="15" fill="rgb(215,124,48)" fg:x="4273" fg:w="50"/><text x="97.2094%" y="575.50"></text></g><g><title>_platform_memset (1 samples, 0.02%)</title><rect x="98.0713%" y="549" width="0.0227%" height="15" fill="rgb(216,46,13)" fg:x="4322" fg:w="1"/><text x="98.3213%" y="559.50"></text></g><g><title>0x1011679f0 (7 samples, 0.16%)</title><rect x="98.1166%" y="549" width="0.1588%" height="15" fill="rgb(205,184,25)" fg:x="4324" fg:w="7"/><text x="98.3666%" y="559.50"></text></g><g><title>__sendto (7 samples, 0.16%)</title><rect x="98.1166%" y="533" width="0.1588%" height="15" fill="rgb(228,1,10)" fg:x="4324" fg:w="7"/><text x="98.3666%" y="543.50"></text></g><g><title>SSLRecordServiceWriteQueueInternal (8 samples, 0.18%)</title><rect x="98.1166%" y="565" width="0.1815%" height="15" fill="rgb(213,116,27)" fg:x="4324" fg:w="8"/><text x="98.3666%" y="575.50"></text></g><g><title>_platform_memset (1 samples, 0.02%)</title><rect x="98.2755%" y="549" width="0.0227%" height="15" fill="rgb(241,95,50)" fg:x="4331" fg:w="1"/><text x="98.5255%" y="559.50"></text></g><g><title>0x101182ae8 (83 samples, 1.88%)</title><rect x="96.4375%" y="629" width="1.8834%" height="15" fill="rgb(238,48,32)" fg:x="4250" fg:w="83"/><text x="96.6875%" y="639.50">0..</text></g><g><title>0x10118bc78 (10 samples, 0.23%)</title><rect x="98.0939%" y="613" width="0.2269%" height="15" fill="rgb(235,113,49)" fg:x="4323" fg:w="10"/><text x="98.3439%" y="623.50"></text></g><g><title>0x10115fd64 (9 samples, 0.20%)</title><rect x="98.1166%" y="597" width="0.2042%" height="15" fill="rgb(205,127,43)" fg:x="4324" fg:w="9"/><text x="98.3666%" y="607.50"></text></g><g><title>SSLWrite (9 samples, 0.20%)</title><rect x="98.1166%" y="581" width="0.2042%" height="15" fill="rgb(250,162,2)" fg:x="4324" fg:w="9"/><text x="98.3666%" y="591.50"></text></g><g><title>SSLRecordWriteInternal (1 samples, 0.02%)</title><rect x="98.2982%" y="565" width="0.0227%" height="15" fill="rgb(220,13,41)" fg:x="4332" fg:w="1"/><text x="98.5482%" y="575.50"></text></g><g><title>tls_record_encrypt (1 samples, 0.02%)</title><rect x="98.2982%" y="549" width="0.0227%" height="15" fill="rgb(249,221,25)" fg:x="4332" fg:w="1"/><text x="98.5482%" y="559.50"></text></g><g><title>ccmode_gcm_init (1 samples, 0.02%)</title><rect x="98.2982%" y="533" width="0.0227%" height="15" fill="rgb(215,208,19)" fg:x="4332" fg:w="1"/><text x="98.5482%" y="543.50"></text></g><g><title>0x1011690f0 (85 samples, 1.93%)</title><rect x="96.4148%" y="661" width="1.9287%" height="15" fill="rgb(236,175,2)" fg:x="4249" fg:w="85"/><text x="96.6648%" y="671.50">0..</text></g><g><title>0x101182470 (84 samples, 1.91%)</title><rect x="96.4375%" y="645" width="1.9061%" height="15" fill="rgb(241,52,2)" fg:x="4250" fg:w="84"/><text x="96.6875%" y="655.50">0..</text></g><g><title>0x10118a8f8 (1 samples, 0.02%)</title><rect x="98.3209%" y="629" width="0.0227%" height="15" fill="rgb(248,140,14)" fg:x="4333" fg:w="1"/><text x="98.5709%" y="639.50"></text></g><g><title>0x1011620d0 (1 samples, 0.02%)</title><rect x="98.3209%" y="613" width="0.0227%" height="15" fill="rgb(253,22,42)" fg:x="4333" fg:w="1"/><text x="98.5709%" y="623.50"></text></g><g><title>0x10115ee34 (1 samples, 0.02%)</title><rect x="98.3209%" y="597" width="0.0227%" height="15" fill="rgb(234,61,47)" fg:x="4333" fg:w="1"/><text x="98.5709%" y="607.50"></text></g><g><title>kevent (1 samples, 0.02%)</title><rect x="98.3209%" y="581" width="0.0227%" height="15" fill="rgb(208,226,15)" fg:x="4333" fg:w="1"/><text x="98.5709%" y="591.50"></text></g><g><title>0x10124d0d4 (1 samples, 0.02%)</title><rect x="98.3435%" y="661" width="0.0227%" height="15" fill="rgb(217,221,4)" fg:x="4334" fg:w="1"/><text x="98.5935%" y="671.50"></text></g><g><title>__psynch_cvsignal (1 samples, 0.02%)</title><rect x="98.3435%" y="645" width="0.0227%" height="15" fill="rgb(212,174,34)" fg:x="4334" fg:w="1"/><text x="98.5935%" y="655.50"></text></g><g><title>_tlv_get_addr (5 samples, 0.11%)</title><rect x="98.3662%" y="661" width="0.1135%" height="15" fill="rgb(253,83,4)" fg:x="4335" fg:w="5"/><text x="98.6162%" y="671.50"></text></g><g><title>0x10121315c (3,770 samples, 85.55%)</title><rect x="12.9567%" y="677" width="85.5457%" height="15" fill="rgb(250,195,49)" fg:x="571" fg:w="3770"/><text x="13.2067%" y="687.50">0x10121315c</text></g><g><title>kevent (1 samples, 0.02%)</title><rect x="98.4797%" y="661" width="0.0227%" height="15" fill="rgb(241,192,25)" fg:x="4340" fg:w="1"/><text x="98.7297%" y="671.50"></text></g><g><title>0x10121507c (48 samples, 1.09%)</title><rect x="98.5024%" y="677" width="1.0892%" height="15" fill="rgb(208,124,10)" fg:x="4341" fg:w="48"/><text x="98.7524%" y="687.50"></text></g><g><title>DYLD-STUB$$pow (5 samples, 0.11%)</title><rect x="99.5916%" y="677" width="0.1135%" height="15" fill="rgb(222,33,0)" fg:x="4389" fg:w="5"/><text x="99.8416%" y="687.50"></text></g><g><title>0x10121507c (4,314 samples, 97.89%)</title><rect x="2.0422%" y="693" width="97.8897%" height="15" fill="rgb(234,209,28)" fg:x="90" fg:w="4314"/><text x="2.2922%" y="703.50">0x10121507c</text></g><g><title>pow (10 samples, 0.23%)</title><rect x="99.7050%" y="677" width="0.2269%" height="15" fill="rgb(224,11,23)" fg:x="4394" fg:w="10"/><text x="99.9550%" y="687.50"></text></g><g><title>all (4,407 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(232,99,1)" fg:x="0" fg:w="4407"/><text x="0.2500%" y="799.50"></text></g><g><title>thread_start (4,345 samples, 98.59%)</title><rect x="1.4069%" y="773" width="98.5931%" height="15" fill="rgb(237,95,45)" fg:x="62" fg:w="4345"/><text x="1.6569%" y="783.50">thread_start</text></g><g><title>_pthread_start (4,345 samples, 98.59%)</title><rect x="1.4069%" y="757" width="98.5931%" height="15" fill="rgb(208,109,11)" fg:x="62" fg:w="4345"/><text x="1.6569%" y="767.50">_pthread_start</text></g><g><title>0x1011f9640 (4,345 samples, 98.59%)</title><rect x="1.4069%" y="741" width="98.5931%" height="15" fill="rgb(216,190,48)" fg:x="62" fg:w="4345"/><text x="1.6569%" y="751.50">0x1011f9640</text></g><g><title>0x10120a540 (4,320 samples, 98.03%)</title><rect x="1.9741%" y="725" width="98.0259%" height="15" fill="rgb(251,171,36)" fg:x="87" fg:w="4320"/><text x="2.2241%" y="735.50">0x10120a540</text></g><g><title>0x101206ba8 (4,320 samples, 98.03%)</title><rect x="1.9741%" y="709" width="98.0259%" height="15" fill="rgb(230,62,22)" fg:x="87" fg:w="4320"/><text x="2.2241%" y="719.50">0x101206ba8</text></g><g><title>pow (3 samples, 0.07%)</title><rect x="99.9319%" y="693" width="0.0681%" height="15" fill="rgb(225,114,35)" fg:x="4404" fg:w="3"/><text x="100.1819%" y="703.50"></text></g></svg></svg>